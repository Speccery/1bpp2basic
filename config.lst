XGA99 CROSS-ASSEMBLER   VERSION 3.0.1
              > config.gpl
0001          * config.gpl
0002          * Configurator for GROMMY2
0003          * At this point this is just a demo how to render the generated screen.gpl
0004          * EP 2023-11-26
0005          *
0006          * Compile the GPL code to binary with:
0007          * xga99.py --aorg 0x6000 config.gpl -L config.lst -o config.bin
0008          * output file is config.bin, since the filename ends with g it is treated
0009          * by an emulator such as js99er.net as a GROM file.
0010          *
0011          * This file includes the screen.gpl file at the very end.
0012          *
0013          
0014          LALIGN EQU >02              Left alignment of text
0015          LALIGN2 EQU >03
0016          
0017          
0018          * Grommy2 command buffer in scratchpad
0019          GCMDBYTE EQU >8340
0020          GCMDP2   EQU >8342
0021          GCMDP3   EQU >8343
0022          GCMDP4   EQU >8344
0023          GCMDP5   EQU >8345
0024          GCMDP6   EQU >8346
0025          GCMDP7   EQU >8347
0026          
0027          BANK    EQU >8350           Active bank
0028          SHADOW  EQU >8351           Shadow enable / disable
0029          PAD0    EQU >8352
0030          PAD1    EQU >8353
0031          PAD2    EQU >8354
0032          PAD3    EQU >8355
0033          PAD4    EQU >8356
0034          
0035          SCANKEY EQU >8375
0036          * Hardware interface address
0037          HWIF     EQU >5FF0
0038          
0039          
0040 6000 AA  G6000  DATA >AA01             standard header  version 1
     6001 01
0041 6002 00         DATA >0000             # of programs 0
     6003 00
0042 6004 00         DATA >0000             no power up
     6005 00
0043 6006 60         DATA G6010             program
     6007 10
0044 6008 00         DATA >0000             DSRs
     6009 00
0045 600A 00         DATA >0000             subprograms
     600B 00
0046 600C 00         DATA >0000
     600D 00
0047 600E 00         DATA >0000
     600F 00
0048          
0049 6010 00  G6010  DATA >0000         * No next program
     6011 00
0050 6012 60         DATA GPROG
     6013 2A
0051 6014 0E         STRI 'GROMMY2 CONFIG'
     6015 47  
     6016 52  
     6017 4F  
     6018 4D  
     6019 4D  
     601A 59  
     601B 32  
     601C 20  
     601D 43  
     601E 4F  
     601F 4E  
     6020 46  
     6021 49  
     6022 47  
0052          
0053          GVREGS
0054 6023 E0      BYTE  >E0              VDP registers values: standard mode
0055 6024 00      BYTE  >00              screen image at >0000
0056 6025 0E      BYTE  >0E              color table at >0380
0057 6026 01      BYTE  >01              char patterns at >0800
0058 6027 06      BYTE  >06              sprite attributes at >0300
0059 6028 00      BYTE  >00              sprite patterns at >0000
0060 6029 F5      BYTE  >F5              text/screen colors: white / light blue
0061          
0062          GPROG
0063 602A 86      CLR   @>8374
     602B 74  
0064 602C BF      DST   >0900,@>834A     load upper case chars 32->
     602D 4A  
     602E 09  
     602F 00
0065 6030 06      CALL  G@>0018
     6031 00  
     6032 18
0066          * Setup roughly as with mini memory
0067 6033 39      MOVE >0007,G@GVREGS,#>01    Set VDP Regs
     6034 00  
     6035 07
     6036 01  
     6037 60  
     6038 23
0068 6039 86      CLR   V@>0800          clear charpats 0-31
     603A A8  
     603B 00
0069 603C 35      MOVE  >00FF,V@>0800,V@>0801
     603D 00  
     603E FF
     603F A8  
     6040 01
     6041 A8  
     6042 00
0070          
0071 6043 BE      ST    >7E,@>8373       init subroutine stack
     6044 73  
     6045 7E  
0072 6046 87      DCLR  @>8322           clear error code
     6047 22  
0073 6048 87      DCLR  @>8348           clear flags
     6049 48  
0074          
0075 604A 86      CLR    @BANK           Actually init from grommy2
     604B 50  
0076 604C 86      CLR    @SHADOW         Actually init from grommy2
     604D 51  
0077          
0078 604E 06      CALL G@GVDPSETUP
     604F 62  
     6050 A6
0079          
0080 6051 06      CALL G@G_SCR1       ; Setup the screen which was automatically generated
     6052 64  
     6053 EA
0081          * Use the FMT token to add some strings on the screen
0082 6054 08      FMT
0083 6055 FF      COL LALIGN
     6056 02  
0084 6057 FE      ROW >07
     6058 07  
0085 6059 1D      HTEX 'VERSION 0.0.00 BANK 0 SHADOW 0'
     605A 56  
     605B 45  
     605C 52  
     605D 53  
     605E 49  
     605F 4F  
     6060 4E  
     6061 20  
     6062 30  
     6063 2E  
     6064 30  
     6065 2E  
     6066 30  
     6067 30  
     6068 20  
     6069 42  
     606A 41  
     606B 4E  
     606C 4B  
     606D 20  
     606E 30  
     606F 20  
     6070 53  
     6071 48  
     6072 41  
     6073 44  
     6074 4F  
     6075 57  
     6076 20  
     6077 30  
0086 6078 A1      ROW+ >02
0087 6079 FF      COL LALIGN
     607A 02  
0088 607B 19      HTEX 'SELECT GROM    : BANK COPY'
     607C 53  
     607D 45  
     607E 4C  
     607F 45  
     6080 43  
     6081 54  
     6082 20  
     6083 47  
     6084 52  
     6085 4F  
     6086 4D  
     6087 20  
     6088 20  
     6089 20  
     608A 20  
     608B 3A  
     608C 20  
     608D 42  
     608E 41  
     608F 4E  
     6090 4B  
     6091 20  
     6092 43  
     6093 4F  
     6094 50  
     6095 59  
0089 6096 A0      ROW+ >01
0090 6097 FF      COL LALIGN
     6098 02  
0091 6099 17      HTEX 'BANK FOR READS : TO GRAM'
     609A 42  
     609B 41  
     609C 4E  
     609D 4B  
     609E 20  
     609F 46  
     60A0 4F  
     60A1 52  
     60A2 20  
     60A3 52  
     60A4 45  
     60A5 41  
     60A6 44  
     60A7 53  
     60A8 20  
     60A9 3A  
     60AA 20  
     60AB 54  
     60AC 4F  
     60AD 20  
     60AE 47  
     60AF 52  
     60B0 41  
     60B1 4D  
0092 60B2 A0      ROW+ >01
0093 60B3 FF      COL LALIGN2
     60B4 03  
0094 60B5 19      HTEX '0 SYSTEM BANK :  A TO COPY'
     60B6 30  
     60B7 20  
     60B8 53  
     60B9 59  
     60BA 53  
     60BB 54  
     60BC 45  
     60BD 4D  
     60BE 20  
     60BF 42  
     60C0 41  
     60C1 4E  
     60C2 4B  
     60C3 20  
     60C4 3A  
     60C5 20  
     60C6 20  
     60C7 41  
     60C8 20  
     60C9 54  
     60CA 4F  
     60CB 20  
     60CC 43  
     60CD 4F  
     60CE 50  
     60CF 59  
0095 60D0 A0      ROW+ >01
0096 60D1 FF      COL LALIGN2
     60D2 03  
0097 60D3 19      HTEX '1 USER BANK 1 :  B TO COPY'
     60D4 31  
     60D5 20  
     60D6 55  
     60D7 53  
     60D8 45  
     60D9 52  
     60DA 20  
     60DB 42  
     60DC 41  
     60DD 4E  
     60DE 4B  
     60DF 20  
     60E0 31  
     60E1 20  
     60E2 3A  
     60E3 20  
     60E4 20  
     60E5 42  
     60E6 20  
     60E7 54  
     60E8 4F  
     60E9 20  
     60EA 43  
     60EB 4F  
     60EC 50  
     60ED 59  
0098 60EE A0      ROW+ >01
0099 60EF FF      COL LALIGN2
     60F0 03  
0100 60F1 19      HTEX '2 USER BANK 2 :  C TO COPY'
     60F2 32  
     60F3 20  
     60F4 55  
     60F5 53  
     60F6 45  
     60F7 52  
     60F8 20  
     60F9 42  
     60FA 41  
     60FB 4E  
     60FC 4B  
     60FD 20  
     60FE 32  
     60FF 20  
     6100 3A  
     6101 20  
     6102 20  
     6103 43  
     6104 20  
     6105 54  
     6106 4F  
     6107 20  
     6108 43  
     6109 4F  
     610A 50  
     610B 59  
0101 610C A0      ROW+ >01
0102 610D FF      COL LALIGN2
     610E 03  
0103 610F 0A      HTEX '3 GRAM BANK'
     6110 33  
     6111 20  
     6112 47  
     6113 52  
     6114 41  
     6115 4D  
     6116 20  
     6117 42  
     6118 41  
     6119 4E  
     611A 4B  
0104          
0105 611B A1      ROW+ >02
0106 611C FF      COL LALIGN
     611D 02  
0107 611E 09      HTEX 'SHADOW RAM'
     611F 53  
     6120 48  
     6121 41  
     6122 44  
     6123 4F  
     6124 57  
     6125 20  
     6126 52  
     6127 41  
     6128 4D  
0108 6129 A0      ROW+ >01
0109 612A FF      COL LALIGN2
     612B 03  
0110 612C 07      HTEX '4 ENABLE'
     612D 34  
     612E 20  
     612F 45  
     6130 4E  
     6131 41  
     6132 42  
     6133 4C  
     6134 45  
0111 6135 A0      ROW+ >01
0112 6136 FF      COL LALIGN2
     6137 03  
0113 6138 08      HTEX '5 DISABLE'
     6139 35  
     613A 20  
     613B 44  
     613C 49  
     613D 53  
     613E 41  
     613F 42  
     6140 4C  
     6141 45  
0114          
0115 6142 A1      ROW+ >02
0116 6143 FF      COL LALIGN
     6144 02  
0117 6145 11      HTEX 'FLASH GRAM TO BANK'
     6146 46  
     6147 4C  
     6148 41  
     6149 53  
     614A 48  
     614B 20  
     614C 47  
     614D 52  
     614E 41  
     614F 4D  
     6150 20  
     6151 54  
     6152 4F  
     6153 20  
     6154 42  
     6155 41  
     6156 4E  
     6157 4B  
0118 6158 A0      ROW+ >01
0119 6159 FF      COL LALIGN2
     615A 03  
0120 615B 0C      HTEX '6 USER BANK 1'
     615C 36  
     615D 20  
     615E 55  
     615F 53  
     6160 45  
     6161 52  
     6162 20  
     6163 42  
     6164 41  
     6165 4E  
     6166 4B  
     6167 20  
     6168 31  
0121 6169 A0      ROW+ >01
0122 616A FF      COL LALIGN2
     616B 03  
0123 616C 0C      HTEX '7 USER BANK 2'
     616D 37  
     616E 20  
     616F 55  
     6170 53  
     6171 45  
     6172 52  
     6173 20  
     6174 42  
     6175 41  
     6176 4E  
     6177 4B  
     6178 20  
     6179 32  
0124 617A FB      FEND
0125          
0126          * Pattern address of character 0xFF
0127          PATADR EQU >0800+(255*8)
0128          * Test a couple of chars
0129 617B 31      MOVE 24,G@DENSE_FONT,V@PATADR-24
     617C 00  
     617D 18
     617E AF  
     617F 0F
     6180 E0
     6181 62  
     6182 72
0130 6183 BE      ST >FC,V@>1C
     6184 A0  
     6185 1C
     6186 FC  
0131 6187 BE      ST >FD,V@>1D
     6188 A0  
     6189 1D
     618A FD  
0132 618B BE      ST >FE,V@>1E
     618C A0  
     618D 1E
     618E FE  
0133          
0134          GWAIT
0135 618F 03      SCAN
0136 6190 61      BS    GOTKEY
     6191 9E  
0137          * We did not get a key. Animate something.
0138 6192 BE      ST    >FF,V@>001F      Write char FF to top left corner
     6193 A0  
     6194 1F
     6195 FF  
0139 6196 A2      ADD   1,V@PATADR
     6197 AF  
     6198 0F
     6199 F8
     619A 01  
0140 619B 05      B    G@GWAIT          wait for the user to press a key
     619C 61  
     619D 8F
0141          
0142          
0143          GOTKEY
0144 619E CE      CGT   '0'-1,@SCANKEY       greater than >= 0
     619F 75  
     61A0 2F  
0145 61A1 41      BR    GG01              no skip forward
     61A2 D9  
0146 61A3 CE      CGT   '9',@SCANKEY        Key greater than '9'?
     61A4 75  
     61A5 39  
0147 61A6 61      BS    GG01              Yes: skip forward
     61A7 D9  
0148 61A8 A6      SUB   '0',@SCANKEY
     61A9 75  
     61AA 30  
0149 61AB 8A      CASE  @SCANKEY
     61AC 75  
0150 61AD 41      BR    KEY0
     61AE CF  
0151 61AF 41      BR    KEY1
     61B0 CF  
0152 61B1 41      BR    KEY2
     61B2 CF  
0153 61B3 41      BR    KEY3
     61B4 CF  
0154 61B5 41      BR    KEY4
     61B6 C1  
0155 61B7 41      BR    KEY5
     61B8 C6  
0156 61B9 41      BR    KEY6
     61BA CA  
0157 61BB 41      BR    KEY7
     61BC D4  
0158 61BD 41      BR    KEY8
     61BE D4  
0159 61BF 41      BR    KEY9
     61C0 D4  
0160          
0161          
0162 61C1 BE  KEY4:   ST  1,@SHADOW
     61C2 51  
     61C3 01  
0163 61C4 41      BR  GG01
     61C5 D9  
0164 61C6 86  KEY5:   CLR @SHADOW
     61C7 51  
0165 61C8 41      BR  GG01
     61C9 D9  
0166 61CA BE  KEY6:   ST 2,@SHADOW
     61CB 51  
     61CC 02  
0167 61CD 41      BR  GG01
     61CE D9  
0168          
0169          KEY0
0170          KEY1
0171          KEY2
0172          KEY3
0173 61CF BC      ST @SCANKEY,@BANK
     61D0 50  
     61D1 75  
0174 61D2 41      BR GG01
     61D3 D9  
0175          KEY7
0176          KEY8
0177          KEY9
0178 61D4 06      CALL  SHOW_VERSION
     61D5 62  
     61D6 14
0179 61D7 41      BR    GWAIT
     61D8 8F  
0180          
0181          GG01
0182 61D9 D6      CEQ   >0F,@SCANKEY       is it Fctn-9?
     61DA 75  
     61DB 0F  
0183 61DC 41      BR    G@GCONT2         no: GCONT2
     61DD DF  
0184 61DE 0B      EXIT                   yes: reset the TI-99/4A
0185          
0186          GCONT2
0187          * Update screen to reflect current status
0188          GUPDATE
0189          * Status of Shadow RAM enable/disable
0190 61DF BE      ST  '0',@PAD0
     61E0 52  
     61E1 30  
0191 61E2 A0      ADD @SHADOW,@PAD0
     61E3 52  
     61E4 51  
0192 61E5 BC      ST  @PAD0,V@>00FF        Write to VRAM
     61E6 A0  
     61E7 FF
     61E8 52  
0193          * Status of selected bank
0194 61E9 BE      ST  '0',@PAD0
     61EA 52  
     61EB 30  
0195 61EC A0      ADD @BANK,@PAD0
     61ED 52  
     61EE 50  
0196 61EF BC      ST  @PAD0,V@>00F6        Write to VRAM
     61F0 A0  
     61F1 F6
     61F2 52  
0197          
0198          
0199          * Start update GROM read bank. First erase bank markings.
0200          BANKOFS EQU >184
0201 61F3 BE      ST ' ',V@BANKOFS
     61F4 A1  
     61F5 84
     61F6 20  
0202 61F7 BE      ST ' ',V@BANKOFS+>20
     61F8 A1  
     61F9 A4
     61FA 20  
0203 61FB BE      ST ' ',V@BANKOFS+>40
     61FC A1  
     61FD C4
     61FE 20  
0204 61FF BE      ST ' ',V@BANKOFS+>60
     6200 A1  
     6201 E4
     6202 20  
0205 6203 87      DCLR @PAD0
     6204 52  
0206 6205 BC      ST   @BANK,@PAD3        Copy to low byte the bank #
     6206 55  
     6207 50  
0207 6208 E3      DSLL 5,@PAD2          Shift by 5 to get 32 chars per line
     6209 54  
     620A 00  
     620B 05
0208 620C BE      ST  '*',V@BANKOFS(@PAD2)   Screen offset 102
     620D E1  
     620E 84
     620F 54
     6210 2A  
0209          * End update GROM read bank.
0210 6211 05      B   G@GWAIT
     6212 61  
     6213 8F
0211          
0212          *----------------------------------------
0213          * Read grommy2 version, update on screen
0214          *----------------------------------------
0215          SHOW_VERSION
0216 6214 06      CALL G@GINITCMD
     6215 62  
     6216 4E
0217 6217 06      CALL G@GSENDCMD
     6218 62  
     6219 55
0218          * Debug put in a dummy version
0219 621A BE      ST   1,@GCMDP2
     621B 42  
     621C 01  
0220 621D BE      ST   2,@GCMDP3
     621E 43  
     621F 02  
0221 6220 BE      ST   34,@GCMDP4
     6221 44  
     6222 22  
0222          
0223          * Show major version in p2
0224 6223 BE      ST  '0',@PAD0
     6224 52  
     6225 30  
0225 6226 A0      ADD @GCMDP2,@PAD0
     6227 52  
     6228 42  
0226 6229 BC      ST  @PAD0,V@>00CA        Write to VRAM
     622A A0  
     622B CA
     622C 52  
0227          * Show minor version in p3
0228 622D BE      ST  '0',@PAD0
     622E 52  
     622F 30  
0229 6230 A0      ADD @GCMDP3,@PAD0
     6231 52  
     6232 43  
0230 6233 BC      ST  @PAD0,V@>00CC        Write to VRAM
     6234 A0  
     6235 CC
     6236 52  
0231          * Show build version in p4. The build is two digits from 0 to 99
0232 6237 86      CLR  @PAD0              Zero fill as the value to divide is 16 bits§
     6238 52  
0233 6239 BC      ST   @GCMDP4,@PAD1
     623A 53  
     623B 44  
0234 623C AE      DIV  10,@PAD0           Quotiotent in PAD0, remainder PAD1
     623D 52  
     623E 0A  
0235 623F A2      ADD  '0',@PAD0
     6240 52  
     6241 30  
0236 6242 BC      ST   @PAD0,V@>00CE      Write to VRAM
     6243 A0  
     6244 CE
     6245 52  
0237 6246 A2      ADD  '0',@PAD1          Remainder
     6247 53  
     6248 30  
0238 6249 BC      ST   @PAD1,V@>00CF      Write to VRAM
     624A A0  
     624B CF
     624C 53  
0239 624D 00      RTN
0240          
0241          
0242          *----------------------------------------
0243          * Init command buffer in pad
0244          *----------------------------------------
0245          GINITCMD
0246 624E 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    Copy command template from GROM
     624F 00  
     6250 10
     6251 40  
     6252 62  
     6253 62
0247 6254 00         RTN
0248          
0249          *----------------------------------------
0250          * Send command to grommy2
0251          *----------------------------------------
0252          GSENDCMD
0253 6255 BC         ST   @GCMDBYTE,@GCMDBYTE+1        Setup the complement of command byte
     6256 41  
     6257 40  
0254 6258 BA         XOR   >FF,@GCMDBYTE+1
     6259 41  
     625A FF  
0255 625B 25         MOVE  >0010,@GCMDBYTE,G@HWIF      Send command to grommy2
     625C 00  
     625D 10
     625E 5F  
     625F F0
     6260 40  
0256 6261 00         RTN
0257          
0258          
0259          GROMMY_DAT
0260 6262 00         DATA   >00FF,>003F,>0000,>0000
     6263 FF
     6264 00  
     6265 3F
     6266 00  
     6267 00
     6268 00  
     6269 00
0261 626A 45         TEXT 'EPGROMMY'
     626B 50  
     626C 47  
     626D 52  
     626E 4F  
     626F 4D  
     6270 4D  
     6271 59  
0262          
0263          
0264          DENSE_FONT ; Define character cells wihtin 4x8 cell
0265          ; Numnbers 0 and 1
0266 6272 22          BYTE >22
0267 6273 56          BYTE >56
0268 6274 52          BYTE >52
0269 6275 52          BYTE >52
0270 6276 52          BYTE >52
0271 6277 52          BYTE >52
0272 6278 27          BYTE >27
0273 6279 00          BYTE >00
0274          ; Define a cell with 2 and 3
0275 627A 26          BYTE >26
0276 627B 51          BYTE >51
0277 627C 11          BYTE >11
0278 627D 26          BYTE >26
0279 627E 41          BYTE >41
0280 627F 41          BYTE >41
0281 6280 76          BYTE >76
0282 6281 00          BYTE >00
0283          ; Define a cell with 4 and 5
0284 6282 17          BYTE >17
0285 6283 34          BYTE >34
0286 6284 54          BYTE >54
0287 6285 76          BYTE >76
0288 6286 11          BYTE >11
0289 6287 11          BYTE >11
0290 6288 16          BYTE >16
0291 6289 00          BYTE >00
0292          
0293          * Test code copied from Mini Memory
0294 628A 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    place parameter string in PAD
     628B 00  
     628C 10
     628D 40  
     628E 62  
     628F 62
0295 6290 BC         ST    @>839A,@>8340                Copy command byte
     6291 40  
     6292 80  
     6293 9A
0296 6294 BC         ST    @>839A,@>8341                The second byte is its complement
     6295 41  
     6296 80  
     6297 9A
0297 6298 BA         XOR   >FF,@>8341
     6299 41  
     629A FF  
0298 629B BC         ST    @>839B,@>8342                Copy p2.
     629C 42  
     629D 80  
     629E 9B
0299 629F 25         MOVE  >0010,@>8340,G@HWIF         Copy from PAD @8340 to GRAM @5FF0. Does this work? Yes!
     62A0 00  
     62A1 10
     62A2 5F  
     62A3 F0
     62A4 40  
0300 62A5 00         RTN
0301          
0302          
0303          *----------------------------------------
0304          * VDP setup for module
0305          *----------------------------------------
0306          GVDPSETUP
0307 62A6 BE      ST    >D0,V@>0300      no sprites
     62A7 A3  
     62A8 00
     62A9 D0  
0308 62AA BE      ST    >F5,V@>0380      init color table as white on blue for all chars
     62AB A3  
     62AC 80
     62AD F5  
0309 62AE 35      MOVE  >001F,V@>0380,V@>0381
     62AF 00  
     62B0 1F
     62B1 A3  
     62B2 81
     62B3 A3  
     62B4 80
0310 62B5 07      ALL   >20              erase screen
     62B6 20  
0311 62B7 04      BACK  >F5              screen colors: white on light blue
     62B8 F5  
0312 62B9 00      RTN
0313          
0314              COPY 'screen.gpl'
              > screen.gpl
0001          * Character definitions
0002 62BA 00  GUDG96	BYTE >00,>00,>00,>00,>00,>00,>00,>00 ; Character 96
     62BB 00  
     62BC 00  
     62BD 00  
     62BE 00  
     62BF 00  
     62C0 00  
     62C1 00  
0003 62C2 00  GUDG97	BYTE >00,>00,>00,>03,>0F,>1F,>3F,>3F ; Character 97
     62C3 00  
     62C4 00  
     62C5 03  
     62C6 0F  
     62C7 1F  
     62C8 3F  
     62C9 3F  
0004 62CA 00  GUDG98	BYTE >00,>00,>00,>F0,>FC,>FE,>FF,>FF ; Character 98
     62CB 00  
     62CC 00  
     62CD F0  
     62CE FC  
     62CF FE  
     62D0 FF  
     62D1 FF  
0005 62D2 00  GUDG99	BYTE >00,>00,>00,>00,>00,>00,>00,>80 ; Character 99
     62D3 00  
     62D4 00  
     62D5 00  
     62D6 00  
     62D7 00  
     62D8 00  
     62D9 80  
0006 62DA 1C  GUDG100	BYTE >1C,>3F,>7F,>FF,>FF,>FE,>FE,>FE ; Character 100
     62DB 3F  
     62DC 7F  
     62DD FF  
     62DE FF  
     62DF FE  
     62E0 FE  
     62E1 FE  
0007 62E2 00  GUDG101	BYTE >00,>3F,>FF,>FF,>FF,>7F,>7F,>7F ; Character 101
     62E3 3F  
     62E4 FF  
     62E5 FF  
     62E6 FF  
     62E7 7F  
     62E8 7F  
     62E9 7F  
0008 62EA 00  GUDG102	BYTE >00,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 102
     62EB 3F  
     62EC 3F  
     62ED 3F  
     62EE 3F  
     62EF 3F  
     62F0 3F  
     62F1 3F  
0009 62F2 00  GUDG103	BYTE >00,>9C,>BC,>FC,>FC,>FD,>FD,>FD ; Character 103
     62F3 9C  
     62F4 BC  
     62F5 FC  
     62F6 FC  
     62F7 FD  
     62F8 FD  
     62F9 FD  
0010 62FA 07  GUDG104	BYTE >07,>3F,>7F,>FF,>FF,>FC,>FC,>FC ; Character 104
     62FB 3F  
     62FC 7F  
     62FD FF  
     62FE FF  
     62FF FC  
     6300 FC  
     6301 FC  
0011 6302 00  GUDG105	BYTE >00,>F0,>F8,>FC,>FE,>FE,>FE,>FE ; Character 105
     6303 F0  
     6304 F8  
     6305 FC  
     6306 FE  
     6307 FE  
     6308 FE  
     6309 FE  
0012 630A 06  GUDG106	BYTE >06,>9F,>FF,>FF,>FF,>9F,>9F,>9F ; Character 106
     630B 9F  
     630C FF  
     630D FF  
     630E FF  
     630F 9F  
     6310 9F  
     6311 9F  
0013 6312 03  GUDG107	BYTE >03,>8F,>DF,>FF,>FF,>E7,>C7,>C7 ; Character 107
     6313 8F  
     6314 DF  
     6315 FF  
     6316 FF  
     6317 E7  
     6318 C7  
     6319 C7  
0014 631A 00  GUDG108	BYTE >00,>C7,>E7,>E7,>E7,>F7,>F7,>F7 ; Character 108
     631B C7  
     631C E7  
     631D E7  
     631E E7  
     631F F7  
     6320 F7  
     6321 F7  
0015 6322 00  GUDG109	BYTE >00,>F3,>FF,>FF,>FF,>F3,>F3,>F3 ; Character 109
     6323 F3  
     6324 FF  
     6325 FF  
     6326 FF  
     6327 F3  
     6328 F3  
     6329 F3  
0016 632A C0  GUDG110	BYTE >C0,>F1,>FB,>FF,>FF,>FC,>F8,>F8 ; Character 110
     632B F1  
     632C FB  
     632D FF  
     632E FF  
     632F FC  
     6330 F8  
     6331 F8  
0017 6332 60  GUDG111	BYTE >60,>F8,>FC,>FC,>FC,>FE,>FE,>FE ; Character 111
     6333 F8  
     6334 FC  
     6335 FC  
     6336 FC  
     6337 FE  
     6338 FE  
     6339 FE  
0018 633A 00  GUDG112	BYTE >00,>FC,>FE,>FE,>7E,>7E,>7E,>7E ; Character 112
     633B FC  
     633C FE  
     633D FE  
     633E 7E  
     633F 7E  
     6340 7E  
     6341 7E  
0019 6342 00  GUDG113	BYTE >00,>3F,>3F,>7F,>7F,>7F,>7E,>7E ; Character 113
     6343 3F  
     6344 3F  
     6345 7F  
     6346 7F  
     6347 7F  
     6348 7E  
     6349 7E  
0020 634A 7F  GUDG114	BYTE >7F,>7E,>7E,>7E,>7E,>00,>00,>00 ; Character 114
     634B 7E  
     634C 7E  
     634D 7E  
     634E 7E  
     634F 00  
     6350 00  
     6351 00  
0021 6352 3F  GUDG115	BYTE >3F,>3F,>3F,>3F,>3F,>7F,>7F,>FF ; Character 115
     6353 3F  
     6354 3F  
     6355 3F  
     6356 3F  
     6357 7F  
     6358 7F  
     6359 FF  
0022 635A 80  GUDG116	BYTE >80,>80,>80,>80,>80,>80,>00,>00 ; Character 116
     635B 80  
     635C 80  
     635D 80  
     635E 80  
     635F 80  
     6360 00  
     6361 00  
0023 6362 FE  GUDG117	BYTE >FE,>FE,>FE,>FE,>FE,>FE,>FE,>FE ; Character 117
     6363 FE  
     6364 FE  
     6365 FE  
     6366 FE  
     6367 FE  
     6368 FE  
     6369 FE  
0024 636A 7F  GUDG118	BYTE >7F,>7F,>7F,>7F,>7F,>7F,>7F,>7F ; Character 118
     636B 7F  
     636C 7F  
     636D 7F  
     636E 7F  
     636F 7F  
     6370 7F  
     6371 7F  
0025 6372 3F  GUDG119	BYTE >3F,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 119
     6373 3F  
     6374 3F  
     6375 3F  
     6376 3F  
     6377 3F  
     6378 3F  
     6379 3F  
0026 637A F9  GUDG120	BYTE >F9,>C1,>C1,>81,>81,>81,>81,>81 ; Character 120
     637B C1  
     637C C1  
     637D 81  
     637E 81  
     637F 81  
     6380 81  
     6381 81  
0027 6382 FC  GUDG121	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>FC,>FC ; Character 121
     6383 FC  
     6384 FC  
     6385 FC  
     6386 FC  
     6387 FC  
     6388 FC  
     6389 FC  
0028 638A 9F  GUDG122	BYTE >9F,>9F,>9F,>9F,>9F,>9F,>9F,>9F ; Character 122
     638B 9F  
     638C 9F  
     638D 9F  
     638E 9F  
     638F 9F  
     6390 9F  
     6391 9F  
0029 6392 C7  GUDG123	BYTE >C7,>C7,>C7,>C7,>C7,>C7,>C7,>C7 ; Character 123
     6393 C7  
     6394 C7  
     6395 C7  
     6396 C7  
     6397 C7  
     6398 C7  
     6399 C7  
0030 639A F7  GUDG124	BYTE >F7,>F7,>F7,>F7,>F7,>F7,>F7,>F7 ; Character 124
     639B F7  
     639C F7  
     639D F7  
     639E F7  
     639F F7  
     63A0 F7  
     63A1 F7  
0031 63A2 F3  GUDG125	BYTE >F3,>F3,>F3,>F3,>F3,>F3,>F3,>F3 ; Character 125
     63A3 F3  
     63A4 F3  
     63A5 F3  
     63A6 F3  
     63A7 F3  
     63A8 F3  
     63A9 F3  
0032 63AA F8  GUDG126	BYTE >F8,>F8,>F8,>F8,>F8,>F8,>F8,>F8 ; Character 126
     63AB F8  
     63AC F8  
     63AD F8  
     63AE F8  
     63AF F8  
     63B0 F8  
     63B1 F8  
0033 63B2 7E  GUDG127	BYTE >7E,>3F,>3F,>3F,>3F,>3F,>1F,>1F ; Character 127
     63B3 3F  
     63B4 3F  
     63B5 3F  
     63B6 3F  
     63B7 3F  
     63B8 1F  
     63B9 1F  
0034 63BA 7E  GUDG128	BYTE >7E,>7E,>7E,>7E,>7E,>7E,>FC,>FC ; Character 128
     63BB 7E  
     63BC 7E  
     63BD 7E  
     63BE 7E  
     63BF 7E  
     63C0 FC  
     63C1 FC  
0035 63C2 00  GUDG129	BYTE >00,>01,>01,>03,>07,>07,>0F,>0F ; Character 129
     63C3 01  
     63C4 01  
     63C5 03  
     63C6 07  
     63C7 07  
     63C8 0F  
     63C9 0F  
0036 63CA FF  GUDG130	BYTE >FF,>FE,>FC,>FC,>F8,>F8,>F0,>E0 ; Character 130
     63CB FE  
     63CC FC  
     63CD FC  
     63CE F8  
     63CF F8  
     63D0 F0  
     63D1 E0  
0037 63D2 FE  GUDG131	BYTE >FE,>FF,>7F,>7F,>3F,>00,>FE,>FE ; Character 131
     63D3 FF  
     63D4 7F  
     63D5 7F  
     63D6 3F  
     63D7 00  
     63D8 FE  
     63D9 FE  
0038 63DA 7F  GUDG132	BYTE >7F,>FF,>FF,>FF,>7F,>7F,>7F,>7F ; Character 132
     63DB FF  
     63DC FF  
     63DD FF  
     63DE 7F  
     63DF 7F  
     63E0 7F  
     63E1 7F  
0039 63E2 81  GUDG133	BYTE >81,>81,>81,>81,>80,>80,>80,>80 ; Character 133
     63E3 81  
     63E4 81  
     63E5 81  
     63E6 80  
     63E7 80  
     63E8 80  
     63E9 80  
0040 63EA FC  GUDG134	BYTE >FC,>FC,>FC,>FC,>FF,>FF,>7F,>1F ; Character 134
     63EB FC  
     63EC FC  
     63ED FC  
     63EE FF  
     63EF FF  
     63F0 7F  
     63F1 1F  
0041 63F2 FE  GUDG135	BYTE >FE,>FE,>FE,>FE,>FC,>FC,>F8,>E0 ; Character 135
     63F3 FE  
     63F4 FE  
     63F5 FE  
     63F6 FC  
     63F7 FC  
     63F8 F8  
     63F9 E0  
0042 63FA 1F  GUDG136	BYTE >1F,>1F,>1F,>0F,>0F,>0F,>0F,>1F ; Character 136
     63FB 1F  
     63FC 1F  
     63FD 0F  
     63FE 0F  
     63FF 0F  
     6400 0F  
     6401 1F  
0043 6402 FC  GUDG137	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>F8,>F8 ; Character 137
     6403 FC  
     6404 FC  
     6405 FC  
     6406 FC  
     6407 FC  
     6408 F8  
     6409 F8  
0044 640A 1F  GUDG138	BYTE >1F,>3F,>3F,>7F,>7F,>7F,>7F,>7F ; Character 138
     640B 3F  
     640C 3F  
     640D 7F  
     640E 7F  
     640F 7F  
     6410 7F  
     6411 7F  
0045 6412 E0  GUDG139	BYTE >E0,>C0,>80,>FF,>FF,>FF,>FF,>FF ; Character 139
     6413 C0  
     6414 80  
     6415 FF  
     6416 FF  
     6417 FF  
     6418 FF  
     6419 FF  
0046 641A 00  GUDG140	BYTE >00,>00,>00,>00,>80,>80,>80,>80 ; Character 140
     641B 00  
     641C 00  
     641D 00  
     641E 80  
     641F 80  
     6420 80  
     6421 80  
0047 6422 FF  GUDG141	BYTE >FF,>7F,>3F,>0F,>00,>00,>00,>00 ; Character 141
     6423 7F  
     6424 3F  
     6425 0F  
     6426 00  
     6427 00  
     6428 00  
     6429 00  
0048 642A FF  GUDG142	BYTE >FF,>FE,>FC,>F0,>00,>00,>00,>00 ; Character 142
     642B FE  
     642C FC  
     642D F0  
     642E 00  
     642F 00  
     6430 00  
     6431 00  
0049 6432 3F  GUDG143	BYTE >3F,>3F,>3F,>00,>00,>00,>00,>00 ; Character 143
     6433 3F  
     6434 3F  
     6435 00  
     6436 00  
     6437 00  
     6438 00  
     6439 00  
0050 643A F8  GUDG144	BYTE >F8,>F0,>E0,>00,>00,>00,>00,>00 ; Character 144
     643B F0  
     643C E0  
     643D 00  
     643E 00  
     643F 00  
     6440 00  
     6441 00  
0051 6442 00  GUDG145	BYTE >00,>00,>00,>3E,>60,>60,>60,>60 ; Character 145
     6443 00  
     6444 00  
     6445 3E  
     6446 60  
     6447 60  
     6448 60  
     6449 60  
0052 644A 00  GUDG146	BYTE >00,>00,>00,>3E,>66,>43,>C3,>43 ; Character 146
     644B 00  
     644C 00  
     644D 3E  
     644E 66  
     644F 43  
     6450 C3  
     6451 43  
0053 6452 00  GUDG147	BYTE >00,>00,>00,>63,>73,>7B,>6F,>6F ; Character 147
     6453 00  
     6454 00  
     6455 63  
     6456 73  
     6457 7B  
     6458 6F  
     6459 6F  
0054 645A 00  GUDG148	BYTE >00,>00,>00,>7C,>60,>60,>7C,>60 ; Character 148
     645B 00  
     645C 00  
     645D 7C  
     645E 60  
     645F 60  
     6460 7C  
     6461 60  
0055 6462 00  GUDG149	BYTE >00,>00,>00,>C7,>CC,>CC,>CC,>CC ; Character 149
     6463 00  
     6464 00  
     6465 C7  
     6466 CC  
     6467 CC  
     6468 CC  
     6469 CC  
0056 646A 00  GUDG150	BYTE >00,>00,>00,>C0,>00,>00,>C0,>E0 ; Character 150
     646B 00  
     646C 00  
     646D C0  
     646E 00  
     646F 00  
     6470 C0  
     6471 E0  
0057 6472 60  GUDG151	BYTE >60,>32,>1E,>00,>00,>00,>00,>00 ; Character 151
     6473 32  
     6474 1E  
     6475 00  
     6476 00  
     6477 00  
     6478 00  
     6479 00  
0058 647A 62  GUDG152	BYTE >62,>76,>3C,>00,>00,>00,>00,>00 ; Character 152
     647B 76  
     647C 3C  
     647D 00  
     647E 00  
     647F 00  
     6480 00  
     6481 00  
0059 6482 67  GUDG153	BYTE >67,>67,>63,>00,>00,>00,>00,>00 ; Character 153
     6483 67  
     6484 63  
     6485 00  
     6486 00  
     6487 00  
     6488 00  
     6489 00  
0060 648A 60  GUDG154	BYTE >60,>60,>60,>00,>00,>00,>00,>00 ; Character 154
     648B 60  
     648C 60  
     648D 00  
     648E 00  
     648F 00  
     6490 00  
     6491 00  
0061 6492 CC  GUDG155	BYTE >CC,>CE,>C7,>00,>00,>00,>00,>00 ; Character 155
     6493 CE  
     6494 C7  
     6495 00  
     6496 00  
     6497 00  
     6498 00  
     6499 00  
0062 649A 60  GUDG156	BYTE >60,>E0,>C0,>00,>00,>00,>00,>00 ; Character 156
     649B E0  
     649C C0  
     649D 00  
     649E 00  
     649F 00  
     64A0 00  
     64A1 00  
0063 64A2 61  GLINE1_25 BYTE >61,>62,>63
     64A3 62  
     64A4 63  
0064 64A5 64  GLINE2_25 BYTE >64,>65,>66,>67,>68,>69,>66,>6A,>6B,>6C,>6D,>6E,>6F,>70,>71,>72,>73,>74
     64A6 65  
     64A7 66  
     64A8 67  
     64A9 68  
     64AA 69  
     64AB 66  
     64AC 6A  
     64AD 6B  
     64AE 6C  
     64AF 6D  
     64B0 6E  
     64B1 6F  
     64B2 70  
     64B3 71  
     64B4 72  
     64B5 73  
     64B6 74  
0065 64B7 75  GLINE3_24 BYTE >75,>76,>77,>78,>79,>75,>77,>7A,>7B,>7C,>7D,>7E,>75,>7F,>80,>81,>82
     64B8 76  
     64B9 77  
     64BA 78  
     64BB 79  
     64BC 75  
     64BD 77  
     64BE 7A  
     64BF 7B  
     64C0 7C  
     64C1 7D  
     64C2 7E  
     64C3 75  
     64C4 7F  
     64C5 80  
     64C6 81  
     64C7 82  
0066 64C8 83  GLINE4_25 BYTE >83,>84,>77,>85,>86,>87,>77,>7A,>7B,>7C,>7D,>7E,>75,>88,>89,>8A,>8B,>8C
     64C9 84  
     64CA 77  
     64CB 85  
     64CC 86  
     64CD 87  
     64CE 77  
     64CF 7A  
     64D0 7B  
     64D1 7C  
     64D2 7D  
     64D3 7E  
     64D4 75  
     64D5 88  
     64D6 89  
     64D7 8A  
     64D8 8B  
     64D9 8C  
0067 64DA 8D  GLINE5_9 BYTE >8D,>8E
     64DB 8E  
0068 64DC 8F  GLINE5_28 BYTE >8F,>90,>91,>92,>93,>94,>95,>96
     64DD 90  
     64DE 91  
     64DF 92  
     64E0 93  
     64E1 94  
     64E2 95  
     64E3 96  
0069 64E4 97  GLINE6_28 BYTE >97,>98,>99,>9A,>9B,>9C
     64E5 98  
     64E6 99  
     64E7 9A  
     64E8 9B  
     64E9 9C  
0070          
0071          G_SCR1
0072 64EA 31      MOVE >01E8,G@GUDG96,V@>0B00 ; Copy our screen chars
     64EB 01  
     64EC E8
     64ED AB  
     64EE 00
     64EF 62  
     64F0 BA
0073          
0074 64F1 31  	MOVE >0003,G@GLINE1_25,V@>0036
     64F2 00  
     64F3 03
     64F4 A0  
     64F5 36
     64F6 64  
     64F7 A2
0075 64F8 31  	MOVE >0012,G@GLINE2_25,V@>0047
     64F9 00  
     64FA 12
     64FB A0  
     64FC 47
     64FD 64  
     64FE A5
0076 64FF 31  	MOVE >0011,G@GLINE3_24,V@>0067
     6500 00  
     6501 11
     6502 A0  
     6503 67
     6504 64  
     6505 B7
0077 6506 31  	MOVE >0012,G@GLINE4_25,V@>0087
     6507 00  
     6508 12
     6509 A0  
     650A 87
     650B 64  
     650C C8
0078 650D 31  	MOVE >0002,G@GLINE5_9,V@>00A7
     650E 00  
     650F 02
     6510 A0  
     6511 A7
     6512 64  
     6513 DA
0079 6514 31  	MOVE >0008,G@GLINE5_28,V@>00B4
     6515 00  
     6516 08
     6517 A0  
     6518 B4
     6519 64  
     651A DC
0080 651B 31  	MOVE >0006,G@GLINE6_28,V@>00D6
     651C 00  
     651D 06
     651E A0  
     651F D6
     6520 64  
     6521 E4
0081          
0082 6522 00      RTN
0083          
