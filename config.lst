XGA99 CROSS-ASSEMBLER   VERSION 3.0.1
              > config.gpl
0001          * config.gpl
0002          * Configurator for GROMMY2
0003          * At this point this is just a demo how to render the generated screen.gpl
0004          * EP 2023-11-26
0005          *
0006          * Compile the GPL code to binary with:
0007          * xga99.py --aorg 0x6000 config.gpl -L config.lst -o config.bin
0008          * output file is config.bin, since the filename ends with g it is treated
0009          * by an emulator such as js99er.net as a GROM file.
0010          *
0011          * This file includes the screen.gpl file at the very end.
0012          *
0013          
0014          LALIGN EQU >02              Left alignment of text
0015          LALIGN2 EQU >05
0016          
0017          
0018          * Grommy2 command buffer in scratchpad
0019          GCMDBYTE EQU >8340
0020          GCMDP2   EQU >8342
0021          GCMDP3   EQU >8343
0022          GCMDP4   EQU >8344
0023          GCMDP5   EQU >8345
0024          GCMDP6   EQU >8346
0025          GCMDP7   EQU >8347
0026          
0027          BANK    EQU >8350           Active bank
0028          SHADOW  EQU >8351           Shadow enable / disable
0029          PAD0    EQU >8352
0030          PAD1    EQU >8353
0031          PAD2    EQU >8354
0032          PAD3    EQU >8355
0033          PAD4    EQU >8356
0034          
0035          SCANKEY EQU >8375
0036          * Hardware interface address
0037          HWIF     EQU >5FF0
0038          
0039          
0040 6000 AA  G6000  DATA >AA01             standard header  version 1
     6001 01
0041 6002 00         DATA >0000             # of programs 0
     6003 00
0042 6004 00         DATA >0000             no power up
     6005 00
0043 6006 60         DATA G6010             program
     6007 10
0044 6008 00         DATA >0000             DSRs
     6009 00
0045 600A 00         DATA >0000             subprograms
     600B 00
0046 600C 00         DATA >0000
     600D 00
0047 600E 00         DATA >0000
     600F 00
0048          
0049 6010 00  G6010  DATA >0000         * No next program
     6011 00
0050 6012 60         DATA GPROG
     6013 2A
0051 6014 0E         STRI 'GROMMY2 CONFIG'
     6015 47  
     6016 52  
     6017 4F  
     6018 4D  
     6019 4D  
     601A 59  
     601B 32  
     601C 20  
     601D 43  
     601E 4F  
     601F 4E  
     6020 46  
     6021 49  
     6022 47  
0052          
0053          GVREGS
0054 6023 E0      BYTE  >E0              VDP registers values: standard mode
0055 6024 00      BYTE  >00              screen image at >0000
0056 6025 0E      BYTE  >0E              color table at >0380
0057 6026 01      BYTE  >01              char patterns at >0800
0058 6027 06      BYTE  >06              sprite attributes at >0300
0059 6028 00      BYTE  >00              sprite patterns at >0000
0060 6029 F5      BYTE  >F5              text/screen colors: white / light blue
0061          
0062          GPROG
0063 602A 86      CLR   @>8374
     602B 74  
0064 602C BF      DST   >0900,@>834A     load upper case chars 32->
     602D 4A  
     602E 09  
     602F 00
0065 6030 06      CALL  G@>0018
     6031 00  
     6032 18
0066          * Setup roughly as with mini memory
0067 6033 39      MOVE >0007,G@GVREGS,#>01    Set VDP Regs
     6034 00  
     6035 07
     6036 01  
     6037 60  
     6038 23
0068 6039 86      CLR   V@>0800          clear charpats 0-31
     603A A8  
     603B 00
0069 603C 35      MOVE  >00FF,V@>0800,V@>0801
     603D 00  
     603E FF
     603F A8  
     6040 01
     6041 A8  
     6042 00
0070          
0071 6043 BE      ST    >7E,@>8373       init subroutine stack
     6044 73  
     6045 7E  
0072 6046 87      DCLR  @>8322           clear error code
     6047 22  
0073 6048 87      DCLR  @>8348           clear flags
     6049 48  
0074          
0075 604A 86      CLR    @BANK           Actually init from grommy2
     604B 50  
0076 604C 86      CLR    @SHADOW         Actually init from grommy2
     604D 51  
0077          
0078 604E 06      CALL G@GVDPSETUP
     604F 62  
     6050 5A
0079          
0080 6051 06      CALL G@G_SCR1       ; Setup the screen which was automatically generated
     6052 64  
     6053 9E
0081          * Use the FMT token to add some strings on the screen
0082 6054 08      FMT
0083 6055 FF      COL LALIGN
     6056 02  
0084 6057 FE      ROW >07
     6058 07  
0085 6059 1D      HTEX 'VERSION 0.0.00 BANK 0 SHADOW 0'
     605A 56  
     605B 45  
     605C 52  
     605D 53  
     605E 49  
     605F 4F  
     6060 4E  
     6061 20  
     6062 30  
     6063 2E  
     6064 30  
     6065 2E  
     6066 30  
     6067 30  
     6068 20  
     6069 42  
     606A 41  
     606B 4E  
     606C 4B  
     606D 20  
     606E 30  
     606F 20  
     6070 53  
     6071 48  
     6072 41  
     6073 44  
     6074 4F  
     6075 57  
     6076 20  
     6077 30  
0086 6078 A1      ROW+ >02
0087 6079 FF      COL LALIGN
     607A 02  
0088 607B 10      HTEX 'SELECT GROM READS'
     607C 53  
     607D 45  
     607E 4C  
     607F 45  
     6080 43  
     6081 54  
     6082 20  
     6083 47  
     6084 52  
     6085 4F  
     6086 4D  
     6087 20  
     6088 52  
     6089 45  
     608A 41  
     608B 44  
     608C 53  
0089 608D A0      ROW+ >01
0090 608E FF      COL LALIGN2
     608F 05  
0091 6090 0C      HTEX '0 SYSTEM BANK'
     6091 30  
     6092 20  
     6093 53  
     6094 59  
     6095 53  
     6096 54  
     6097 45  
     6098 4D  
     6099 20  
     609A 42  
     609B 41  
     609C 4E  
     609D 4B  
0092 609E A0      ROW+ >01
0093 609F FF      COL LALIGN2
     60A0 05  
0094 60A1 0C      HTEX '1 USER BANK 1'
     60A2 31  
     60A3 20  
     60A4 55  
     60A5 53  
     60A6 45  
     60A7 52  
     60A8 20  
     60A9 42  
     60AA 41  
     60AB 4E  
     60AC 4B  
     60AD 20  
     60AE 31  
0095 60AF A0      ROW+ >01
0096 60B0 FF      COL LALIGN2
     60B1 05  
0097 60B2 0C      HTEX '2 USER BANK 2'
     60B3 32  
     60B4 20  
     60B5 55  
     60B6 53  
     60B7 45  
     60B8 52  
     60B9 20  
     60BA 42  
     60BB 41  
     60BC 4E  
     60BD 4B  
     60BE 20  
     60BF 32  
0098 60C0 A0      ROW+ >01
0099 60C1 FF      COL LALIGN2
     60C2 05  
0100 60C3 0A      HTEX '3 GRAM BANK'
     60C4 33  
     60C5 20  
     60C6 47  
     60C7 52  
     60C8 41  
     60C9 4D  
     60CA 20  
     60CB 42  
     60CC 41  
     60CD 4E  
     60CE 4B  
0101          
0102 60CF A1      ROW+ >02
0103 60D0 FF      COL LALIGN
     60D1 02  
0104 60D2 09      HTEX 'SHADOW RAM'
     60D3 53  
     60D4 48  
     60D5 41  
     60D6 44  
     60D7 4F  
     60D8 57  
     60D9 20  
     60DA 52  
     60DB 41  
     60DC 4D  
0105 60DD A0      ROW+ >01
0106 60DE FF      COL LALIGN2
     60DF 05  
0107 60E0 07      HTEX '4 ENABLE'
     60E1 34  
     60E2 20  
     60E3 45  
     60E4 4E  
     60E5 41  
     60E6 42  
     60E7 4C  
     60E8 45  
0108 60E9 A0      ROW+ >01
0109 60EA FF      COL LALIGN2
     60EB 05  
0110 60EC 08      HTEX '5 DISABLE'
     60ED 35  
     60EE 20  
     60EF 44  
     60F0 49  
     60F1 53  
     60F2 41  
     60F3 42  
     60F4 4C  
     60F5 45  
0111          
0112 60F6 A1      ROW+ >02
0113 60F7 FF      COL LALIGN
     60F8 02  
0114 60F9 11      HTEX 'FLASH GRAM TO BANK'
     60FA 46  
     60FB 4C  
     60FC 41  
     60FD 53  
     60FE 48  
     60FF 20  
     6100 47  
     6101 52  
     6102 41  
     6103 4D  
     6104 20  
     6105 54  
     6106 4F  
     6107 20  
     6108 42  
     6109 41  
     610A 4E  
     610B 4B  
0115 610C A0      ROW+ >01
0116 610D FF      COL LALIGN2
     610E 05  
0117 610F 0C      HTEX '6 USER BANK 1'
     6110 36  
     6111 20  
     6112 55  
     6113 53  
     6114 45  
     6115 52  
     6116 20  
     6117 42  
     6118 41  
     6119 4E  
     611A 4B  
     611B 20  
     611C 31  
0118 611D A0      ROW+ >01
0119 611E FF      COL LALIGN2
     611F 05  
0120 6120 0C      HTEX '7 USER BANK 2'
     6121 37  
     6122 20  
     6123 55  
     6124 53  
     6125 45  
     6126 52  
     6127 20  
     6128 42  
     6129 41  
     612A 4E  
     612B 4B  
     612C 20  
     612D 32  
0121 612E FB      FEND
0122          
0123          * Pattern address of character 0xFF
0124          PATADR EQU >0800+(255*8)
0125          * Test a couple of chars
0126 612F 31      MOVE 24,G@DENSE_FONT,V@PATADR-24
     6130 00  
     6131 18
     6132 AF  
     6133 0F
     6134 E0
     6135 62  
     6136 26
0127 6137 BE      ST >FC,V@>1C
     6138 A0  
     6139 1C
     613A FC  
0128 613B BE      ST >FD,V@>1D
     613C A0  
     613D 1D
     613E FD  
0129 613F BE      ST >FE,V@>1E
     6140 A0  
     6141 1E
     6142 FE  
0130          
0131          GWAIT
0132 6143 03      SCAN
0133 6144 61      BS    GOTKEY
     6145 52  
0134          * We did not get a key. Animate something.
0135 6146 BE      ST    >FF,V@>001F      Write char FF to top left corner
     6147 A0  
     6148 1F
     6149 FF  
0136 614A A2      ADD   1,V@PATADR
     614B AF  
     614C 0F
     614D F8
     614E 01  
0137 614F 05      B    G@GWAIT          wait for the user to press a key
     6150 61  
     6151 43
0138          
0139          
0140          GOTKEY
0141 6152 CE      CGT   '0'-1,@SCANKEY       greater than >= 0
     6153 75  
     6154 2F  
0142 6155 41      BR    GG01              no skip forward
     6156 8D  
0143 6157 CE      CGT   '9',@SCANKEY        Key greater than '9'?
     6158 75  
     6159 39  
0144 615A 61      BS    GG01              Yes: skip forward
     615B 8D  
0145 615C A6      SUB   '0',@SCANKEY
     615D 75  
     615E 30  
0146 615F 8A      CASE  @SCANKEY
     6160 75  
0147 6161 41      BR    KEY0
     6162 83  
0148 6163 41      BR    KEY1
     6164 83  
0149 6165 41      BR    KEY2
     6166 83  
0150 6167 41      BR    KEY3
     6168 83  
0151 6169 41      BR    KEY4
     616A 75  
0152 616B 41      BR    KEY5
     616C 7A  
0153 616D 41      BR    KEY6
     616E 7E  
0154 616F 41      BR    KEY7
     6170 88  
0155 6171 41      BR    KEY8
     6172 88  
0156 6173 41      BR    KEY9
     6174 88  
0157          
0158          
0159 6175 BE  KEY4:   ST  1,@SHADOW
     6176 51  
     6177 01  
0160 6178 41      BR  GG01
     6179 8D  
0161 617A 86  KEY5:   CLR @SHADOW
     617B 51  
0162 617C 41      BR  GG01
     617D 8D  
0163 617E BE  KEY6:   ST 2,@SHADOW
     617F 51  
     6180 02  
0164 6181 41      BR  GG01
     6182 8D  
0165          
0166          KEY0
0167          KEY1
0168          KEY2
0169          KEY3
0170 6183 BC      ST @SCANKEY,@BANK
     6184 50  
     6185 75  
0171 6186 41      BR GG01
     6187 8D  
0172          KEY7
0173          KEY8
0174          KEY9
0175 6188 06      CALL  SHOW_VERSION
     6189 61  
     618A C8
0176 618B 41      BR    GWAIT
     618C 43  
0177          
0178          GG01
0179 618D D6      CEQ   >0F,@SCANKEY       is it Fctn-9?
     618E 75  
     618F 0F  
0180 6190 41      BR    G@GCONT2         no: GCONT2
     6191 93  
0181 6192 0B      EXIT                   yes: reset the TI-99/4A
0182          
0183          GCONT2
0184          * Update screen to reflect current status
0185          GUPDATE
0186          * Status of Shadow RAM enable/disable
0187 6193 BE      ST  '0',@PAD0
     6194 52  
     6195 30  
0188 6196 A0      ADD @SHADOW,@PAD0
     6197 52  
     6198 51  
0189 6199 BC      ST  @PAD0,V@>00FF        Write to VRAM
     619A A0  
     619B FF
     619C 52  
0190          * Status of selected bank
0191 619D BE      ST  '0',@PAD0
     619E 52  
     619F 30  
0192 61A0 A0      ADD @BANK,@PAD0
     61A1 52  
     61A2 50  
0193 61A3 BC      ST  @PAD0,V@>00F6        Write to VRAM
     61A4 A0  
     61A5 F6
     61A6 52  
0194          
0195          
0196          * Start update GROM read bank. First erase bank markings.
0197          BANKOFS EQU >164
0198 61A7 BE      ST ' ',V@BANKOFS
     61A8 A1  
     61A9 64
     61AA 20  
0199 61AB BE      ST ' ',V@BANKOFS+>20
     61AC A1  
     61AD 84
     61AE 20  
0200 61AF BE      ST ' ',V@BANKOFS+>40
     61B0 A1  
     61B1 A4
     61B2 20  
0201 61B3 BE      ST ' ',V@BANKOFS+>60
     61B4 A1  
     61B5 C4
     61B6 20  
0202 61B7 87      DCLR @PAD0
     61B8 52  
0203 61B9 BC      ST   @BANK,@PAD3        Copy to low byte the bank #
     61BA 55  
     61BB 50  
0204 61BC E3      DSLL 5,@PAD2          Shift by 5 to get 32 chars per line
     61BD 54  
     61BE 00  
     61BF 05
0205 61C0 BE      ST  '*',V@>164(@PAD2)   Screen offset 102
     61C1 E1  
     61C2 64
     61C3 54
     61C4 2A  
0206          * End update GROM read bank.
0207 61C5 05      B   G@GWAIT
     61C6 61  
     61C7 43
0208          
0209          *----------------------------------------
0210          * Read grommy2 version, update on screen
0211          *----------------------------------------
0212          SHOW_VERSION
0213 61C8 06      CALL G@GINITCMD
     61C9 62  
     61CA 02
0214 61CB 06      CALL G@GSENDCMD
     61CC 62  
     61CD 09
0215          * Debug put in a dummy version
0216 61CE BE      ST   1,@GCMDP2
     61CF 42  
     61D0 01  
0217 61D1 BE      ST   2,@GCMDP3
     61D2 43  
     61D3 02  
0218 61D4 BE      ST   34,@GCMDP4
     61D5 44  
     61D6 22  
0219          
0220          * Show major version in p2
0221 61D7 BE      ST  '0',@PAD0
     61D8 52  
     61D9 30  
0222 61DA A0      ADD @GCMDP2,@PAD0
     61DB 52  
     61DC 42  
0223 61DD BC      ST  @PAD0,V@>00CA        Write to VRAM
     61DE A0  
     61DF CA
     61E0 52  
0224          * Show minor version in p3
0225 61E1 BE      ST  '0',@PAD0
     61E2 52  
     61E3 30  
0226 61E4 A0      ADD @GCMDP3,@PAD0
     61E5 52  
     61E6 43  
0227 61E7 BC      ST  @PAD0,V@>00CC        Write to VRAM
     61E8 A0  
     61E9 CC
     61EA 52  
0228          * Show build version in p4. The build is two digits from 0 to 99
0229 61EB 86      CLR  @PAD0              Zero fill as the value to divide is 16 bits§
     61EC 52  
0230 61ED BC      ST   @GCMDP4,@PAD1
     61EE 53  
     61EF 44  
0231 61F0 AE      DIV  10,@PAD0           Quotiotent in PAD0, remainder PAD1
     61F1 52  
     61F2 0A  
0232 61F3 A2      ADD  '0',@PAD0
     61F4 52  
     61F5 30  
0233 61F6 BC      ST   @PAD0,V@>00CE      Write to VRAM
     61F7 A0  
     61F8 CE
     61F9 52  
0234 61FA A2      ADD  '0',@PAD1          Remainder
     61FB 53  
     61FC 30  
0235 61FD BC      ST   @PAD1,V@>00CF      Write to VRAM
     61FE A0  
     61FF CF
     6200 53  
0236 6201 00      RTN
0237          
0238          
0239          *----------------------------------------
0240          * Init command buffer in pad
0241          *----------------------------------------
0242          GINITCMD
0243 6202 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    Copy command template from GROM
     6203 00  
     6204 10
     6205 40  
     6206 62  
     6207 16
0244 6208 00         RTN
0245          
0246          *----------------------------------------
0247          * Send command to grommy2
0248          *----------------------------------------
0249          GSENDCMD
0250 6209 BC         ST   @GCMDBYTE,@GCMDBYTE+1        Setup the complement of command byte
     620A 41  
     620B 40  
0251 620C BA         XOR   >FF,@GCMDBYTE+1
     620D 41  
     620E FF  
0252 620F 25         MOVE  >0010,@GCMDBYTE,G@HWIF      Send command to grommy2
     6210 00  
     6211 10
     6212 5F  
     6213 F0
     6214 40  
0253 6215 00         RTN
0254          
0255          
0256          GROMMY_DAT
0257 6216 00         DATA   >00FF,>003F,>0000,>0000
     6217 FF
     6218 00  
     6219 3F
     621A 00  
     621B 00
     621C 00  
     621D 00
0258 621E 45         TEXT 'EPGROMMY'
     621F 50  
     6220 47  
     6221 52  
     6222 4F  
     6223 4D  
     6224 4D  
     6225 59  
0259          
0260          
0261          DENSE_FONT ; Define character cells wihtin 4x8 cell
0262          ; Numnbers 0 and 1
0263 6226 22          BYTE >22
0264 6227 56          BYTE >56
0265 6228 52          BYTE >52
0266 6229 52          BYTE >52
0267 622A 52          BYTE >52
0268 622B 52          BYTE >52
0269 622C 27          BYTE >27
0270 622D 00          BYTE >00
0271          ; Define a cell with 2 and 3
0272 622E 26          BYTE >26
0273 622F 51          BYTE >51
0274 6230 11          BYTE >11
0275 6231 26          BYTE >26
0276 6232 41          BYTE >41
0277 6233 41          BYTE >41
0278 6234 76          BYTE >76
0279 6235 00          BYTE >00
0280          ; Define a cell with 4 and 5
0281 6236 17          BYTE >17
0282 6237 34          BYTE >34
0283 6238 54          BYTE >54
0284 6239 76          BYTE >76
0285 623A 11          BYTE >11
0286 623B 11          BYTE >11
0287 623C 16          BYTE >16
0288 623D 00          BYTE >00
0289          
0290          * Test code copied from Mini Memory
0291 623E 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    place parameter string in PAD
     623F 00  
     6240 10
     6241 40  
     6242 62  
     6243 16
0292 6244 BC         ST    @>839A,@>8340                Copy command byte
     6245 40  
     6246 80  
     6247 9A
0293 6248 BC         ST    @>839A,@>8341                The second byte is its complement
     6249 41  
     624A 80  
     624B 9A
0294 624C BA         XOR   >FF,@>8341
     624D 41  
     624E FF  
0295 624F BC         ST    @>839B,@>8342                Copy p2.
     6250 42  
     6251 80  
     6252 9B
0296 6253 25         MOVE  >0010,@>8340,G@HWIF         Copy from PAD @8340 to GRAM @5FF0. Does this work? Yes!
     6254 00  
     6255 10
     6256 5F  
     6257 F0
     6258 40  
0297 6259 00         RTN
0298          
0299          
0300          *----------------------------------------
0301          * VDP setup for module
0302          *----------------------------------------
0303          GVDPSETUP
0304 625A BE      ST    >D0,V@>0300      no sprites
     625B A3  
     625C 00
     625D D0  
0305 625E BE      ST    >F5,V@>0380      init color table as white on blue for all chars
     625F A3  
     6260 80
     6261 F5  
0306 6262 35      MOVE  >001F,V@>0380,V@>0381
     6263 00  
     6264 1F
     6265 A3  
     6266 81
     6267 A3  
     6268 80
0307 6269 07      ALL   >20              erase screen
     626A 20  
0308 626B 04      BACK  >F5              screen colors: white on light blue
     626C F5  
0309 626D 00      RTN
0310          
0311              COPY 'screen.gpl'
              > screen.gpl
0001          * Character definitions
0002 626E 00  GUDG96	BYTE >00,>00,>00,>00,>00,>00,>00,>00 ; Character 96
     626F 00  
     6270 00  
     6271 00  
     6272 00  
     6273 00  
     6274 00  
     6275 00  
0003 6276 00  GUDG97	BYTE >00,>00,>00,>03,>0F,>1F,>3F,>3F ; Character 97
     6277 00  
     6278 00  
     6279 03  
     627A 0F  
     627B 1F  
     627C 3F  
     627D 3F  
0004 627E 00  GUDG98	BYTE >00,>00,>00,>F0,>FC,>FE,>FF,>FF ; Character 98
     627F 00  
     6280 00  
     6281 F0  
     6282 FC  
     6283 FE  
     6284 FF  
     6285 FF  
0005 6286 00  GUDG99	BYTE >00,>00,>00,>00,>00,>00,>00,>80 ; Character 99
     6287 00  
     6288 00  
     6289 00  
     628A 00  
     628B 00  
     628C 00  
     628D 80  
0006 628E 1C  GUDG100	BYTE >1C,>3F,>7F,>FF,>FF,>FE,>FE,>FE ; Character 100
     628F 3F  
     6290 7F  
     6291 FF  
     6292 FF  
     6293 FE  
     6294 FE  
     6295 FE  
0007 6296 00  GUDG101	BYTE >00,>3F,>FF,>FF,>FF,>7F,>7F,>7F ; Character 101
     6297 3F  
     6298 FF  
     6299 FF  
     629A FF  
     629B 7F  
     629C 7F  
     629D 7F  
0008 629E 00  GUDG102	BYTE >00,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 102
     629F 3F  
     62A0 3F  
     62A1 3F  
     62A2 3F  
     62A3 3F  
     62A4 3F  
     62A5 3F  
0009 62A6 00  GUDG103	BYTE >00,>9C,>BC,>FC,>FC,>FD,>FD,>FD ; Character 103
     62A7 9C  
     62A8 BC  
     62A9 FC  
     62AA FC  
     62AB FD  
     62AC FD  
     62AD FD  
0010 62AE 07  GUDG104	BYTE >07,>3F,>7F,>FF,>FF,>FC,>FC,>FC ; Character 104
     62AF 3F  
     62B0 7F  
     62B1 FF  
     62B2 FF  
     62B3 FC  
     62B4 FC  
     62B5 FC  
0011 62B6 00  GUDG105	BYTE >00,>F0,>F8,>FC,>FE,>FE,>FE,>FE ; Character 105
     62B7 F0  
     62B8 F8  
     62B9 FC  
     62BA FE  
     62BB FE  
     62BC FE  
     62BD FE  
0012 62BE 06  GUDG106	BYTE >06,>9F,>FF,>FF,>FF,>9F,>9F,>9F ; Character 106
     62BF 9F  
     62C0 FF  
     62C1 FF  
     62C2 FF  
     62C3 9F  
     62C4 9F  
     62C5 9F  
0013 62C6 03  GUDG107	BYTE >03,>8F,>DF,>FF,>FF,>E7,>C7,>C7 ; Character 107
     62C7 8F  
     62C8 DF  
     62C9 FF  
     62CA FF  
     62CB E7  
     62CC C7  
     62CD C7  
0014 62CE 00  GUDG108	BYTE >00,>C7,>E7,>E7,>E7,>F7,>F7,>F7 ; Character 108
     62CF C7  
     62D0 E7  
     62D1 E7  
     62D2 E7  
     62D3 F7  
     62D4 F7  
     62D5 F7  
0015 62D6 00  GUDG109	BYTE >00,>F3,>FF,>FF,>FF,>F3,>F3,>F3 ; Character 109
     62D7 F3  
     62D8 FF  
     62D9 FF  
     62DA FF  
     62DB F3  
     62DC F3  
     62DD F3  
0016 62DE C0  GUDG110	BYTE >C0,>F1,>FB,>FF,>FF,>FC,>F8,>F8 ; Character 110
     62DF F1  
     62E0 FB  
     62E1 FF  
     62E2 FF  
     62E3 FC  
     62E4 F8  
     62E5 F8  
0017 62E6 60  GUDG111	BYTE >60,>F8,>FC,>FC,>FC,>FE,>FE,>FE ; Character 111
     62E7 F8  
     62E8 FC  
     62E9 FC  
     62EA FC  
     62EB FE  
     62EC FE  
     62ED FE  
0018 62EE 00  GUDG112	BYTE >00,>FC,>FE,>FE,>7E,>7E,>7E,>7E ; Character 112
     62EF FC  
     62F0 FE  
     62F1 FE  
     62F2 7E  
     62F3 7E  
     62F4 7E  
     62F5 7E  
0019 62F6 00  GUDG113	BYTE >00,>3F,>3F,>7F,>7F,>7F,>7E,>7E ; Character 113
     62F7 3F  
     62F8 3F  
     62F9 7F  
     62FA 7F  
     62FB 7F  
     62FC 7E  
     62FD 7E  
0020 62FE 7F  GUDG114	BYTE >7F,>7E,>7E,>7E,>7E,>00,>00,>00 ; Character 114
     62FF 7E  
     6300 7E  
     6301 7E  
     6302 7E  
     6303 00  
     6304 00  
     6305 00  
0021 6306 3F  GUDG115	BYTE >3F,>3F,>3F,>3F,>3F,>7F,>7F,>FF ; Character 115
     6307 3F  
     6308 3F  
     6309 3F  
     630A 3F  
     630B 7F  
     630C 7F  
     630D FF  
0022 630E 80  GUDG116	BYTE >80,>80,>80,>80,>80,>80,>00,>00 ; Character 116
     630F 80  
     6310 80  
     6311 80  
     6312 80  
     6313 80  
     6314 00  
     6315 00  
0023 6316 FE  GUDG117	BYTE >FE,>FE,>FE,>FE,>FE,>FE,>FE,>FE ; Character 117
     6317 FE  
     6318 FE  
     6319 FE  
     631A FE  
     631B FE  
     631C FE  
     631D FE  
0024 631E 7F  GUDG118	BYTE >7F,>7F,>7F,>7F,>7F,>7F,>7F,>7F ; Character 118
     631F 7F  
     6320 7F  
     6321 7F  
     6322 7F  
     6323 7F  
     6324 7F  
     6325 7F  
0025 6326 3F  GUDG119	BYTE >3F,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 119
     6327 3F  
     6328 3F  
     6329 3F  
     632A 3F  
     632B 3F  
     632C 3F  
     632D 3F  
0026 632E F9  GUDG120	BYTE >F9,>C1,>C1,>81,>81,>81,>81,>81 ; Character 120
     632F C1  
     6330 C1  
     6331 81  
     6332 81  
     6333 81  
     6334 81  
     6335 81  
0027 6336 FC  GUDG121	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>FC,>FC ; Character 121
     6337 FC  
     6338 FC  
     6339 FC  
     633A FC  
     633B FC  
     633C FC  
     633D FC  
0028 633E 9F  GUDG122	BYTE >9F,>9F,>9F,>9F,>9F,>9F,>9F,>9F ; Character 122
     633F 9F  
     6340 9F  
     6341 9F  
     6342 9F  
     6343 9F  
     6344 9F  
     6345 9F  
0029 6346 C7  GUDG123	BYTE >C7,>C7,>C7,>C7,>C7,>C7,>C7,>C7 ; Character 123
     6347 C7  
     6348 C7  
     6349 C7  
     634A C7  
     634B C7  
     634C C7  
     634D C7  
0030 634E F7  GUDG124	BYTE >F7,>F7,>F7,>F7,>F7,>F7,>F7,>F7 ; Character 124
     634F F7  
     6350 F7  
     6351 F7  
     6352 F7  
     6353 F7  
     6354 F7  
     6355 F7  
0031 6356 F3  GUDG125	BYTE >F3,>F3,>F3,>F3,>F3,>F3,>F3,>F3 ; Character 125
     6357 F3  
     6358 F3  
     6359 F3  
     635A F3  
     635B F3  
     635C F3  
     635D F3  
0032 635E F8  GUDG126	BYTE >F8,>F8,>F8,>F8,>F8,>F8,>F8,>F8 ; Character 126
     635F F8  
     6360 F8  
     6361 F8  
     6362 F8  
     6363 F8  
     6364 F8  
     6365 F8  
0033 6366 7E  GUDG127	BYTE >7E,>3F,>3F,>3F,>3F,>3F,>1F,>1F ; Character 127
     6367 3F  
     6368 3F  
     6369 3F  
     636A 3F  
     636B 3F  
     636C 1F  
     636D 1F  
0034 636E 7E  GUDG128	BYTE >7E,>7E,>7E,>7E,>7E,>7E,>FC,>FC ; Character 128
     636F 7E  
     6370 7E  
     6371 7E  
     6372 7E  
     6373 7E  
     6374 FC  
     6375 FC  
0035 6376 00  GUDG129	BYTE >00,>01,>01,>03,>07,>07,>0F,>0F ; Character 129
     6377 01  
     6378 01  
     6379 03  
     637A 07  
     637B 07  
     637C 0F  
     637D 0F  
0036 637E FF  GUDG130	BYTE >FF,>FE,>FC,>FC,>F8,>F8,>F0,>E0 ; Character 130
     637F FE  
     6380 FC  
     6381 FC  
     6382 F8  
     6383 F8  
     6384 F0  
     6385 E0  
0037 6386 FE  GUDG131	BYTE >FE,>FF,>7F,>7F,>3F,>00,>FE,>FE ; Character 131
     6387 FF  
     6388 7F  
     6389 7F  
     638A 3F  
     638B 00  
     638C FE  
     638D FE  
0038 638E 7F  GUDG132	BYTE >7F,>FF,>FF,>FF,>7F,>7F,>7F,>7F ; Character 132
     638F FF  
     6390 FF  
     6391 FF  
     6392 7F  
     6393 7F  
     6394 7F  
     6395 7F  
0039 6396 81  GUDG133	BYTE >81,>81,>81,>81,>80,>80,>80,>80 ; Character 133
     6397 81  
     6398 81  
     6399 81  
     639A 80  
     639B 80  
     639C 80  
     639D 80  
0040 639E FC  GUDG134	BYTE >FC,>FC,>FC,>FC,>FF,>FF,>7F,>1F ; Character 134
     639F FC  
     63A0 FC  
     63A1 FC  
     63A2 FF  
     63A3 FF  
     63A4 7F  
     63A5 1F  
0041 63A6 FE  GUDG135	BYTE >FE,>FE,>FE,>FE,>FC,>FC,>F8,>E0 ; Character 135
     63A7 FE  
     63A8 FE  
     63A9 FE  
     63AA FC  
     63AB FC  
     63AC F8  
     63AD E0  
0042 63AE 1F  GUDG136	BYTE >1F,>1F,>1F,>0F,>0F,>0F,>0F,>1F ; Character 136
     63AF 1F  
     63B0 1F  
     63B1 0F  
     63B2 0F  
     63B3 0F  
     63B4 0F  
     63B5 1F  
0043 63B6 FC  GUDG137	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>F8,>F8 ; Character 137
     63B7 FC  
     63B8 FC  
     63B9 FC  
     63BA FC  
     63BB FC  
     63BC F8  
     63BD F8  
0044 63BE 1F  GUDG138	BYTE >1F,>3F,>3F,>7F,>7F,>7F,>7F,>7F ; Character 138
     63BF 3F  
     63C0 3F  
     63C1 7F  
     63C2 7F  
     63C3 7F  
     63C4 7F  
     63C5 7F  
0045 63C6 E0  GUDG139	BYTE >E0,>C0,>80,>FF,>FF,>FF,>FF,>FF ; Character 139
     63C7 C0  
     63C8 80  
     63C9 FF  
     63CA FF  
     63CB FF  
     63CC FF  
     63CD FF  
0046 63CE 00  GUDG140	BYTE >00,>00,>00,>00,>80,>80,>80,>80 ; Character 140
     63CF 00  
     63D0 00  
     63D1 00  
     63D2 80  
     63D3 80  
     63D4 80  
     63D5 80  
0047 63D6 FF  GUDG141	BYTE >FF,>7F,>3F,>0F,>00,>00,>00,>00 ; Character 141
     63D7 7F  
     63D8 3F  
     63D9 0F  
     63DA 00  
     63DB 00  
     63DC 00  
     63DD 00  
0048 63DE FF  GUDG142	BYTE >FF,>FE,>FC,>F0,>00,>00,>00,>00 ; Character 142
     63DF FE  
     63E0 FC  
     63E1 F0  
     63E2 00  
     63E3 00  
     63E4 00  
     63E5 00  
0049 63E6 3F  GUDG143	BYTE >3F,>3F,>3F,>00,>00,>00,>00,>00 ; Character 143
     63E7 3F  
     63E8 3F  
     63E9 00  
     63EA 00  
     63EB 00  
     63EC 00  
     63ED 00  
0050 63EE F8  GUDG144	BYTE >F8,>F0,>E0,>00,>00,>00,>00,>00 ; Character 144
     63EF F0  
     63F0 E0  
     63F1 00  
     63F2 00  
     63F3 00  
     63F4 00  
     63F5 00  
0051 63F6 00  GUDG145	BYTE >00,>00,>00,>3E,>60,>60,>60,>60 ; Character 145
     63F7 00  
     63F8 00  
     63F9 3E  
     63FA 60  
     63FB 60  
     63FC 60  
     63FD 60  
0052 63FE 00  GUDG146	BYTE >00,>00,>00,>3E,>66,>43,>C3,>43 ; Character 146
     63FF 00  
     6400 00  
     6401 3E  
     6402 66  
     6403 43  
     6404 C3  
     6405 43  
0053 6406 00  GUDG147	BYTE >00,>00,>00,>63,>73,>7B,>6F,>6F ; Character 147
     6407 00  
     6408 00  
     6409 63  
     640A 73  
     640B 7B  
     640C 6F  
     640D 6F  
0054 640E 00  GUDG148	BYTE >00,>00,>00,>7C,>60,>60,>7C,>60 ; Character 148
     640F 00  
     6410 00  
     6411 7C  
     6412 60  
     6413 60  
     6414 7C  
     6415 60  
0055 6416 00  GUDG149	BYTE >00,>00,>00,>C7,>CC,>CC,>CC,>CC ; Character 149
     6417 00  
     6418 00  
     6419 C7  
     641A CC  
     641B CC  
     641C CC  
     641D CC  
0056 641E 00  GUDG150	BYTE >00,>00,>00,>C0,>00,>00,>C0,>E0 ; Character 150
     641F 00  
     6420 00  
     6421 C0  
     6422 00  
     6423 00  
     6424 C0  
     6425 E0  
0057 6426 60  GUDG151	BYTE >60,>32,>1E,>00,>00,>00,>00,>00 ; Character 151
     6427 32  
     6428 1E  
     6429 00  
     642A 00  
     642B 00  
     642C 00  
     642D 00  
0058 642E 62  GUDG152	BYTE >62,>76,>3C,>00,>00,>00,>00,>00 ; Character 152
     642F 76  
     6430 3C  
     6431 00  
     6432 00  
     6433 00  
     6434 00  
     6435 00  
0059 6436 67  GUDG153	BYTE >67,>67,>63,>00,>00,>00,>00,>00 ; Character 153
     6437 67  
     6438 63  
     6439 00  
     643A 00  
     643B 00  
     643C 00  
     643D 00  
0060 643E 60  GUDG154	BYTE >60,>60,>60,>00,>00,>00,>00,>00 ; Character 154
     643F 60  
     6440 60  
     6441 00  
     6442 00  
     6443 00  
     6444 00  
     6445 00  
0061 6446 CC  GUDG155	BYTE >CC,>CE,>C7,>00,>00,>00,>00,>00 ; Character 155
     6447 CE  
     6448 C7  
     6449 00  
     644A 00  
     644B 00  
     644C 00  
     644D 00  
0062 644E 60  GUDG156	BYTE >60,>E0,>C0,>00,>00,>00,>00,>00 ; Character 156
     644F E0  
     6450 C0  
     6451 00  
     6452 00  
     6453 00  
     6454 00  
     6455 00  
0063 6456 61  GLINE1_25 BYTE >61,>62,>63
     6457 62  
     6458 63  
0064 6459 64  GLINE2_25 BYTE >64,>65,>66,>67,>68,>69,>66,>6A,>6B,>6C,>6D,>6E,>6F,>70,>71,>72,>73,>74
     645A 65  
     645B 66  
     645C 67  
     645D 68  
     645E 69  
     645F 66  
     6460 6A  
     6461 6B  
     6462 6C  
     6463 6D  
     6464 6E  
     6465 6F  
     6466 70  
     6467 71  
     6468 72  
     6469 73  
     646A 74  
0065 646B 75  GLINE3_24 BYTE >75,>76,>77,>78,>79,>75,>77,>7A,>7B,>7C,>7D,>7E,>75,>7F,>80,>81,>82
     646C 76  
     646D 77  
     646E 78  
     646F 79  
     6470 75  
     6471 77  
     6472 7A  
     6473 7B  
     6474 7C  
     6475 7D  
     6476 7E  
     6477 75  
     6478 7F  
     6479 80  
     647A 81  
     647B 82  
0066 647C 83  GLINE4_25 BYTE >83,>84,>77,>85,>86,>87,>77,>7A,>7B,>7C,>7D,>7E,>75,>88,>89,>8A,>8B,>8C
     647D 84  
     647E 77  
     647F 85  
     6480 86  
     6481 87  
     6482 77  
     6483 7A  
     6484 7B  
     6485 7C  
     6486 7D  
     6487 7E  
     6488 75  
     6489 88  
     648A 89  
     648B 8A  
     648C 8B  
     648D 8C  
0067 648E 8D  GLINE5_9 BYTE >8D,>8E
     648F 8E  
0068 6490 8F  GLINE5_28 BYTE >8F,>90,>91,>92,>93,>94,>95,>96
     6491 90  
     6492 91  
     6493 92  
     6494 93  
     6495 94  
     6496 95  
     6497 96  
0069 6498 97  GLINE6_28 BYTE >97,>98,>99,>9A,>9B,>9C
     6499 98  
     649A 99  
     649B 9A  
     649C 9B  
     649D 9C  
0070          
0071          G_SCR1
0072 649E 31      MOVE >01E8,G@GUDG96,V@>0B00 ; Copy our screen chars
     649F 01  
     64A0 E8
     64A1 AB  
     64A2 00
     64A3 62  
     64A4 6E
0073          
0074 64A5 31  	MOVE >0003,G@GLINE1_25,V@>0036
     64A6 00  
     64A7 03
     64A8 A0  
     64A9 36
     64AA 64  
     64AB 56
0075 64AC 31  	MOVE >0012,G@GLINE2_25,V@>0047
     64AD 00  
     64AE 12
     64AF A0  
     64B0 47
     64B1 64  
     64B2 59
0076 64B3 31  	MOVE >0011,G@GLINE3_24,V@>0067
     64B4 00  
     64B5 11
     64B6 A0  
     64B7 67
     64B8 64  
     64B9 6B
0077 64BA 31  	MOVE >0012,G@GLINE4_25,V@>0087
     64BB 00  
     64BC 12
     64BD A0  
     64BE 87
     64BF 64  
     64C0 7C
0078 64C1 31  	MOVE >0002,G@GLINE5_9,V@>00A7
     64C2 00  
     64C3 02
     64C4 A0  
     64C5 A7
     64C6 64  
     64C7 8E
0079 64C8 31  	MOVE >0008,G@GLINE5_28,V@>00B4
     64C9 00  
     64CA 08
     64CB A0  
     64CC B4
     64CD 64  
     64CE 90
0080 64CF 31  	MOVE >0006,G@GLINE6_28,V@>00D6
     64D0 00  
     64D1 06
     64D2 A0  
     64D3 D6
     64D4 64  
     64D5 98
0081          
0082 64D6 00      RTN
0083          
