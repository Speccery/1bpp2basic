XGA99 CROSS-ASSEMBLER   VERSION 3.0.1
              > config.gpl
0001          * config.gpl
0002          * Configurator for GROMMY2
0003          * At this point this is just a demo how to render the generated screen.gpl
0004          * EP 2023-11-26
0005          *
0006          * Compile the GPL code to binary with:
0007          * xga99.py --aorg 0x6000 config.gpl -L config.lst -o config.bin
0008          * output file is config.bin, since the filename ends with g it is treated
0009          * by an emulator such as js99er.net as a GROM file.
0010          *
0011          * This file includes the screen.gpl file at the very end.
0012          *
0013          
0014          LALIGN EQU >02              Left alignment of text
0015          LALIGN2 EQU >05
0016          
0017          
0018          * Grommy2 command buffer in scratchpad
0019          GCMDBYTE EQU >8340
0020          GCMDP2   EQU >8342
0021          GCMDP3   EQU >8343
0022          GCMDP4   EQU >8344
0023          GCMDP5   EQU >8345
0024          GCMDP6   EQU >8346
0025          GCMDP7   EQU >8347
0026          
0027          BANK    EQU >8350           Active bank
0028          SHADOW  EQU >8351           Shadow enable / disable
0029          PAD0    EQU >8352
0030          PAD1    EQU >8353
0031          PAD2    EQU >8354
0032          PAD3    EQU >8355
0033          
0034          SCANKEY EQU >8375
0035          * Hardware interface address
0036          HWIF     EQU >5FF0
0037          
0038          
0039 6000 AA  G6000  DATA >AA01             standard header  version 1
     6001 01
0040 6002 00         DATA >0000             # of programs 0
     6003 00
0041 6004 00         DATA >0000             no power up
     6005 00
0042 6006 60         DATA G6010             program
     6007 10
0043 6008 00         DATA >0000             DSRs
     6009 00
0044 600A 00         DATA >0000             subprograms
     600B 00
0045 600C 00         DATA >0000
     600D 00
0046 600E 00         DATA >0000
     600F 00
0047          
0048 6010 00  G6010  DATA >0000         * No next program
     6011 00
0049 6012 60         DATA GPROG
     6013 2A
0050 6014 0E         STRI 'GROMMY2 CONFIG'
     6015 47  
     6016 52  
     6017 4F  
     6018 4D  
     6019 4D  
     601A 59  
     601B 32  
     601C 20  
     601D 43  
     601E 4F  
     601F 4E  
     6020 46  
     6021 49  
     6022 47  
0051          
0052          GVREGS
0053 6023 E0      BYTE  >E0              VDP registers values: standard mode
0054 6024 00      BYTE  >00              screen image at >0000
0055 6025 0E      BYTE  >0E              color table at >0380
0056 6026 01      BYTE  >01              char patterns at >0800
0057 6027 06      BYTE  >06              sprite attributes at >0300
0058 6028 00      BYTE  >00              sprite patterns at >0000
0059 6029 F5      BYTE  >F5              text/screen colors: white / light blue
0060          
0061          GPROG
0062 602A 86      CLR   @>8374
     602B 74  
0063 602C BF      DST   >0900,@>834A     load upper case chars 32->
     602D 4A  
     602E 09  
     602F 00
0064 6030 06      CALL  G@>0018
     6031 00  
     6032 18
0065          * Setup roughly as with mini memory
0066 6033 39      MOVE >0007,G@GVREGS,#>01    Set VDP Regs
     6034 00  
     6035 07
     6036 01  
     6037 60  
     6038 23
0067 6039 86      CLR   V@>0800          clear charpats 0-31
     603A A8  
     603B 00
0068 603C 35      MOVE  >00FF,V@>0800,V@>0801
     603D 00  
     603E FF
     603F A8  
     6040 01
     6041 A8  
     6042 00
0069          
0070 6043 BE      ST    >7E,@>8373       init subroutine stack
     6044 73  
     6045 7E  
0071 6046 87      DCLR  @>8322           clear error code
     6047 22  
0072 6048 87      DCLR  @>8348           clear flags
     6049 48  
0073          
0074 604A 86      CLR    @BANK           Actually init from grommy2
     604B 50  
0075 604C 86      CLR    @SHADOW         Actually init from grommy2
     604D 51  
0076          
0077 604E 06      CALL G@GVDPSETUP
     604F 62  
     6050 6A
0078          
0079 6051 06      CALL G@G_SCR1       ; Setup the screen which was automatically generated
     6052 64  
     6053 AE
0080          * Use the FMT token to add some strings on the screen
0081 6054 08      FMT
0082 6055 FF      COL LALIGN
     6056 02  
0083 6057 FE      ROW >07
     6058 07  
0084 6059 1D      HTEX 'VERSION 0.0.00 BANK 0 SHADOW 0'
     605A 56  
     605B 45  
     605C 52  
     605D 53  
     605E 49  
     605F 4F  
     6060 4E  
     6061 20  
     6062 30  
     6063 2E  
     6064 30  
     6065 2E  
     6066 30  
     6067 30  
     6068 20  
     6069 42  
     606A 41  
     606B 4E  
     606C 4B  
     606D 20  
     606E 30  
     606F 20  
     6070 53  
     6071 48  
     6072 41  
     6073 44  
     6074 4F  
     6075 57  
     6076 20  
     6077 30  
0085 6078 A1      ROW+ >02
0086 6079 FF      COL LALIGN
     607A 02  
0087 607B 19      HTEX 'SELECT BANK FOR GROM READS'
     607C 53  
     607D 45  
     607E 4C  
     607F 45  
     6080 43  
     6081 54  
     6082 20  
     6083 42  
     6084 41  
     6085 4E  
     6086 4B  
     6087 20  
     6088 46  
     6089 4F  
     608A 52  
     608B 20  
     608C 47  
     608D 52  
     608E 4F  
     608F 4D  
     6090 20  
     6091 52  
     6092 45  
     6093 41  
     6094 44  
     6095 53  
0088 6096 A0      ROW+ >01
0089 6097 FF      COL LALIGN2
     6098 05  
0090 6099 0C      HTEX '0 SYSTEM BANK'
     609A 30  
     609B 20  
     609C 53  
     609D 59  
     609E 53  
     609F 54  
     60A0 45  
     60A1 4D  
     60A2 20  
     60A3 42  
     60A4 41  
     60A5 4E  
     60A6 4B  
0091 60A7 A0      ROW+ >01
0092 60A8 FF      COL LALIGN2
     60A9 05  
0093 60AA 0C      HTEX '1 USER BANK 1'
     60AB 31  
     60AC 20  
     60AD 55  
     60AE 53  
     60AF 45  
     60B0 52  
     60B1 20  
     60B2 42  
     60B3 41  
     60B4 4E  
     60B5 4B  
     60B6 20  
     60B7 31  
0094 60B8 A0      ROW+ >01
0095 60B9 FF      COL LALIGN2
     60BA 05  
0096 60BB 0C      HTEX '2 USER BANK 2'
     60BC 32  
     60BD 20  
     60BE 55  
     60BF 53  
     60C0 45  
     60C1 52  
     60C2 20  
     60C3 42  
     60C4 41  
     60C5 4E  
     60C6 4B  
     60C7 20  
     60C8 32  
0097 60C9 A0      ROW+ >01
0098 60CA FF      COL LALIGN2
     60CB 05  
0099 60CC 0A      HTEX '3 GRAM BANK'
     60CD 33  
     60CE 20  
     60CF 47  
     60D0 52  
     60D1 41  
     60D2 4D  
     60D3 20  
     60D4 42  
     60D5 41  
     60D6 4E  
     60D7 4B  
0100          
0101 60D8 A1      ROW+ >02
0102 60D9 FF      COL LALIGN
     60DA 02  
0103 60DB 09      HTEX 'SHADOW RAM'
     60DC 53  
     60DD 48  
     60DE 41  
     60DF 44  
     60E0 4F  
     60E1 57  
     60E2 20  
     60E3 52  
     60E4 41  
     60E5 4D  
0104 60E6 A0      ROW+ >01
0105 60E7 FF      COL LALIGN2
     60E8 05  
0106 60E9 07      HTEX '4 ENABLE'
     60EA 34  
     60EB 20  
     60EC 45  
     60ED 4E  
     60EE 41  
     60EF 42  
     60F0 4C  
     60F1 45  
0107 60F2 A0      ROW+ >01
0108 60F3 FF      COL LALIGN2
     60F4 05  
0109 60F5 08      HTEX '5 DISABLE'
     60F6 35  
     60F7 20  
     60F8 44  
     60F9 49  
     60FA 53  
     60FB 41  
     60FC 42  
     60FD 4C  
     60FE 45  
0110          
0111 60FF A1      ROW+ >02
0112 6100 FF      COL LALIGN
     6101 02  
0113 6102 11      HTEX 'FLASH GRAM TO BANK'
     6103 46  
     6104 4C  
     6105 41  
     6106 53  
     6107 48  
     6108 20  
     6109 47  
     610A 52  
     610B 41  
     610C 4D  
     610D 20  
     610E 54  
     610F 4F  
     6110 20  
     6111 42  
     6112 41  
     6113 4E  
     6114 4B  
0114 6115 A0      ROW+ >01
0115 6116 FF      COL LALIGN2
     6117 05  
0116 6118 0C      HTEX '6 USER BANK 1'
     6119 36  
     611A 20  
     611B 55  
     611C 53  
     611D 45  
     611E 52  
     611F 20  
     6120 42  
     6121 41  
     6122 4E  
     6123 4B  
     6124 20  
     6125 31  
0117 6126 A0      ROW+ >01
0118 6127 FF      COL LALIGN2
     6128 05  
0119 6129 0C      HTEX '7 USER BANK 2'
     612A 37  
     612B 20  
     612C 55  
     612D 53  
     612E 45  
     612F 52  
     6130 20  
     6131 42  
     6132 41  
     6133 4E  
     6134 4B  
     6135 20  
     6136 32  
0120 6137 FB      FEND
0121          
0122          * Pattern address of character 0xFF
0123          PATADR EQU >0800+(255*8)
0124          * Test a couple of chars
0125 6138 31      MOVE 64,G@DENSE_FONT,V@PATADR-64
     6139 00  
     613A 40
     613B AF  
     613C 0F
     613D B8
     613E 62  
     613F 0E
0126 6140 BE      ST >F7,V@>17
     6141 A0  
     6142 17
     6143 F7  
0127 6144 BE      ST >F8,V@>18
     6145 A0  
     6146 18
     6147 F8  
0128 6148 BE      ST >F9,V@>19
     6149 A0  
     614A 19
     614B F9  
0129 614C BE      ST >FA,V@>1A
     614D A0  
     614E 1A
     614F FA  
0130 6150 BE      ST >FB,V@>1B
     6151 A0  
     6152 1B
     6153 FB  
0131 6154 BE      ST >FC,V@>1C
     6155 A0  
     6156 1C
     6157 FC  
0132 6158 BE      ST >FD,V@>1D
     6159 A0  
     615A 1D
     615B FD  
0133 615C BE      ST >FE,V@>1E
     615D A0  
     615E 1E
     615F FE  
0134          
0135          GWAIT
0136 6160 03      SCAN
0137 6161 61      BS    GOTKEY
     6162 6F  
0138          * We did not get a key. Animate something.
0139 6163 BE      ST    >FF,V@>001F      Write char FF to top left corner
     6164 A0  
     6165 1F
     6166 FF  
0140 6167 A2      ADD   1,V@PATADR
     6168 AF  
     6169 0F
     616A F8
     616B 01  
0141 616C 05      B    G@GWAIT          wait for the user to press a key
     616D 61  
     616E 60
0142          
0143          
0144          GOTKEY
0145 616F CE      CGT   '0'-1,@SCANKEY       greater than >= 0
     6170 75  
     6171 2F  
0146 6172 41      BR    GG01              no skip forward
     6173 A5  
0147 6174 CE      CGT   '9',@SCANKEY        Key greater than '9'?
     6175 75  
     6176 39  
0148 6177 61      BS    GG01              Yes: skip forward
     6178 A5  
0149 6179 A6      SUB   '0',@SCANKEY
     617A 75  
     617B 30  
0150 617C 8A      CASE  @SCANKEY
     617D 75  
0151 617E 41      BR    KEY0
     617F A0  
0152 6180 41      BR    KEY1
     6181 A0  
0153 6182 41      BR    KEY2
     6183 A0  
0154 6184 41      BR    KEY3
     6185 A0  
0155 6186 41      BR    KEY4
     6187 92  
0156 6188 41      BR    KEY5
     6189 97  
0157 618A 41      BR    KEY6
     618B 9B  
0158 618C 41      BR    KEY7
     618D A5  
0159 618E 41      BR    KEY8
     618F A5  
0160 6190 41      BR    KEY9
     6191 A5  
0161          
0162          
0163 6192 BE  KEY4:   ST  1,@SHADOW
     6193 51  
     6194 01  
0164 6195 41      BR  GG01
     6196 A5  
0165 6197 86  KEY5:   CLR @SHADOW
     6198 51  
0166 6199 41      BR  GG01
     619A A5  
0167 619B BE  KEY6:   ST 2,@SHADOW
     619C 51  
     619D 02  
0168 619E 41      BR  GG01
     619F A5  
0169          
0170          KEY0
0171          KEY1
0172          KEY2
0173          KEY3
0174 61A0 BC      ST @SCANKEY,@BANK
     61A1 50  
     61A2 75  
0175 61A3 41      BR GG01
     61A4 A5  
0176          KEY7
0177          KEY8
0178          KEY9
0179          
0180          
0181          GG01
0182 61A5 D6      CEQ   >0F,@SCANKEY       is it Fctn-9?
     61A6 75  
     61A7 0F  
0183 61A8 41      BR    G@GCONT2         no: GCONT2
     61A9 AB  
0184 61AA 0B      EXIT                   yes: reset the TI-99/4A
0185          GCONT2
0186 61AB D6      CEQ   '6',@SCANKEY      is it 6?
     61AC 75  
     61AD 36  
0187 61AE 61      BS    UMMA
     61AF E5  
0188          
0189          
0190          * Update screen to reflect current status
0191          GUPDATE
0192 61B0 BE      ST  '0',@PAD0
     61B1 52  
     61B2 30  
0193 61B3 A0      ADD @SHADOW,@PAD0
     61B4 52  
     61B5 51  
0194 61B6 BC      ST  @PAD0,V@>00FF        Write to VRAM
     61B7 A0  
     61B8 FF
     61B9 52  
0195          
0196 61BA BE      ST  '0',@PAD0
     61BB 52  
     61BC 30  
0197 61BD A0      ADD @BANK,@PAD0
     61BE 52  
     61BF 50  
0198 61C0 BC      ST  @PAD0,V@>00F6        Write to VRAM
     61C1 A0  
     61C2 F6
     61C3 52  
0199          
0200          
0201          * Update GROM read bank. First erase bank markings.
0202          BANKOFS EQU >164
0203 61C4 BE      ST ' ',V@BANKOFS
     61C5 A1  
     61C6 64
     61C7 20  
0204 61C8 BE      ST ' ',V@BANKOFS+>20
     61C9 A1  
     61CA 84
     61CB 20  
0205 61CC BE      ST ' ',V@BANKOFS+>40
     61CD A1  
     61CE A4
     61CF 20  
0206 61D0 BE      ST ' ',V@BANKOFS+>60
     61D1 A1  
     61D2 C4
     61D3 20  
0207 61D4 87      DCLR @PAD0
     61D5 52  
0208 61D6 BC      ST   @BANK,@PAD3        Copy to low byte the bank #
     61D7 55  
     61D8 50  
0209 61D9 E3      DSLL 5,@PAD2          Shift by 5 to get 32 chars per line
     61DA 54  
     61DB 00  
     61DC 05
0210 61DD BE      ST  '*',V@>164(@PAD2)   Screen offset 102
     61DE E1  
     61DF 64
     61E0 54
     61E1 2A  
0211          
0212 61E2 05      B   G@GWAIT
     61E3 61  
     61E4 60
0213          
0214 61E5 BE  UMMA ST 2,@SHADOW
     61E6 51  
     61E7 02  
0215 61E8 41      BR GUPDATE
     61E9 B0  
0216          
0217          *----------------------------------------
0218          * Init command buffer in pad
0219          *----------------------------------------
0220          GINITCMD
0221 61EA 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    Copy command template from GROM
     61EB 00  
     61EC 10
     61ED 40  
     61EE 61  
     61EF FE
0222 61F0 00         RTN
0223          
0224          *----------------------------------------
0225          * Send command to grommy2
0226          *----------------------------------------
0227          GSENDCMD
0228 61F1 BC         ST   @GCMDBYTE,@GCMDBYTE+1        Setup the complement of command byte
     61F2 41  
     61F3 40  
0229 61F4 BA         XOR   >FF,@GCMDBYTE+1
     61F5 41  
     61F6 FF  
0230 61F7 25         MOVE  >0010,@GCMDBYTE,G@HWIF      Send command to grommy2
     61F8 00  
     61F9 10
     61FA 5F  
     61FB F0
     61FC 40  
0231 61FD 00         RTN
0232          
0233          
0234          GROMMY_DAT
0235 61FE 00         DATA   >00FF,>003F,>0000,>0000
     61FF FF
     6200 00  
     6201 3F
     6202 00  
     6203 00
     6204 00  
     6205 00
0236 6206 45         TEXT 'EPGROMMY'
     6207 50  
     6208 47  
     6209 52  
     620A 4F  
     620B 4D  
     620C 4D  
     620D 59  
0237          
0238          
0239          DENSE_FONT ; Define character cells wihtin 4x8 cell
0240          ; Numnbers 0 and 1
0241 620E 22          BYTE >22
0242 620F 56          BYTE >56
0243 6210 52          BYTE >52
0244 6211 52          BYTE >52
0245 6212 52          BYTE >52
0246 6213 52          BYTE >52
0247 6214 27          BYTE >27
0248 6215 00          BYTE >00
0249          ; Define a cell with 2 and 3
0250 6216 26          BYTE >26
0251 6217 51          BYTE >51
0252 6218 11          BYTE >11
0253 6219 26          BYTE >26
0254 621A 41          BYTE >41
0255 621B 41          BYTE >41
0256 621C 76          BYTE >76
0257 621D 00          BYTE >00
0258          ; Define a cell with 4 and 5
0259 621E 17          BYTE >17
0260 621F 34          BYTE >34
0261 6220 54          BYTE >54
0262 6221 76          BYTE >76
0263 6222 11          BYTE >11
0264 6223 11          BYTE >11
0265 6224 16          BYTE >16
0266 6225 00          BYTE >00
0267          ; Define a cell with 6 and 7
0268 6226 37          BYTE >37
0269 6227 41          BYTE >41
0270 6228 62          BYTE >62
0271 6229 52          BYTE >52
0272 622A 52          BYTE >52
0273 622B 52          BYTE >52
0274 622C 22          BYTE >22
0275 622D 00          BYTE >00
0276          ; Define a cell with 8 and 9
0277 622E 22          BYTE >22
0278 622F 55          BYTE >55
0279 6230 55          BYTE >55
0280 6231 23          BYTE >23
0281 6232 51          BYTE >51
0282 6233 51          BYTE >51
0283 6234 26          BYTE >26
0284 6235 00          BYTE >00
0285          ; Define a cell with A and B
0286 6236 26          BYTE >26
0287 6237 55          BYTE >55
0288 6238 55          BYTE >55
0289 6239 76          BYTE >76
0290 623A 55          BYTE >55
0291 623B 55          BYTE >55
0292 623C 56          BYTE >56
0293 623D 00          BYTE >00
0294          ; Define a cell with C and D
0295 623E 36          BYTE >36
0296 623F 45          BYTE >45
0297 6240 45          BYTE >45
0298 6241 45          BYTE >45
0299 6242 45          BYTE >45
0300 6243 45          BYTE >45
0301 6244 36          BYTE >36
0302 6245 00          BYTE >00
0303          ; Define a cell with E and F
0304 6246 77          BYTE >77
0305 6247 44          BYTE >44
0306 6248 44          BYTE >44
0307 6249 66          BYTE >66
0308 624A 44          BYTE >44
0309 624B 44          BYTE >44
0310 624C 74          BYTE >74
0311 624D 00          BYTE >00
0312          
0313          * Test code copied from Mini Memory
0314 624E 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    place parameter string in PAD
     624F 00  
     6250 10
     6251 40  
     6252 61  
     6253 FE
0315 6254 BC         ST    @>839A,@>8340                Copy command byte
     6255 40  
     6256 80  
     6257 9A
0316 6258 BC         ST    @>839A,@>8341                The second byte is its complement
     6259 41  
     625A 80  
     625B 9A
0317 625C BA         XOR   >FF,@>8341
     625D 41  
     625E FF  
0318 625F BC         ST    @>839B,@>8342                Copy p2.
     6260 42  
     6261 80  
     6262 9B
0319 6263 25         MOVE  >0010,@>8340,G@HWIF         Copy from PAD @8340 to GRAM @5FF0. Does this work? Yes!
     6264 00  
     6265 10
     6266 5F  
     6267 F0
     6268 40  
0320 6269 00         RTN
0321          
0322          
0323          *----------------------------------------
0324          * VDP setup for module
0325          *----------------------------------------
0326          GVDPSETUP
0327 626A BE      ST    >D0,V@>0300      no sprites
     626B A3  
     626C 00
     626D D0  
0328 626E BE      ST    >F5,V@>0380      init color table as white on blue for all chars
     626F A3  
     6270 80
     6271 F5  
0329 6272 35      MOVE  >001F,V@>0380,V@>0381
     6273 00  
     6274 1F
     6275 A3  
     6276 81
     6277 A3  
     6278 80
0330 6279 07      ALL   >20              erase screen
     627A 20  
0331 627B 04      BACK  >F5              screen colors: white on light blue
     627C F5  
0332 627D 00      RTN
0333          
0334              COPY 'screen.gpl'
              > screen.gpl
0001          * Character definitions
0002 627E 00  GUDG96	BYTE >00,>00,>00,>00,>00,>00,>00,>00 ; Character 96
     627F 00  
     6280 00  
     6281 00  
     6282 00  
     6283 00  
     6284 00  
     6285 00  
0003 6286 00  GUDG97	BYTE >00,>00,>00,>03,>0F,>1F,>3F,>3F ; Character 97
     6287 00  
     6288 00  
     6289 03  
     628A 0F  
     628B 1F  
     628C 3F  
     628D 3F  
0004 628E 00  GUDG98	BYTE >00,>00,>00,>F0,>FC,>FE,>FF,>FF ; Character 98
     628F 00  
     6290 00  
     6291 F0  
     6292 FC  
     6293 FE  
     6294 FF  
     6295 FF  
0005 6296 00  GUDG99	BYTE >00,>00,>00,>00,>00,>00,>00,>80 ; Character 99
     6297 00  
     6298 00  
     6299 00  
     629A 00  
     629B 00  
     629C 00  
     629D 80  
0006 629E 1C  GUDG100	BYTE >1C,>3F,>7F,>FF,>FF,>FE,>FE,>FE ; Character 100
     629F 3F  
     62A0 7F  
     62A1 FF  
     62A2 FF  
     62A3 FE  
     62A4 FE  
     62A5 FE  
0007 62A6 00  GUDG101	BYTE >00,>3F,>FF,>FF,>FF,>7F,>7F,>7F ; Character 101
     62A7 3F  
     62A8 FF  
     62A9 FF  
     62AA FF  
     62AB 7F  
     62AC 7F  
     62AD 7F  
0008 62AE 00  GUDG102	BYTE >00,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 102
     62AF 3F  
     62B0 3F  
     62B1 3F  
     62B2 3F  
     62B3 3F  
     62B4 3F  
     62B5 3F  
0009 62B6 00  GUDG103	BYTE >00,>9C,>BC,>FC,>FC,>FD,>FD,>FD ; Character 103
     62B7 9C  
     62B8 BC  
     62B9 FC  
     62BA FC  
     62BB FD  
     62BC FD  
     62BD FD  
0010 62BE 07  GUDG104	BYTE >07,>3F,>7F,>FF,>FF,>FC,>FC,>FC ; Character 104
     62BF 3F  
     62C0 7F  
     62C1 FF  
     62C2 FF  
     62C3 FC  
     62C4 FC  
     62C5 FC  
0011 62C6 00  GUDG105	BYTE >00,>F0,>F8,>FC,>FE,>FE,>FE,>FE ; Character 105
     62C7 F0  
     62C8 F8  
     62C9 FC  
     62CA FE  
     62CB FE  
     62CC FE  
     62CD FE  
0012 62CE 06  GUDG106	BYTE >06,>9F,>FF,>FF,>FF,>9F,>9F,>9F ; Character 106
     62CF 9F  
     62D0 FF  
     62D1 FF  
     62D2 FF  
     62D3 9F  
     62D4 9F  
     62D5 9F  
0013 62D6 03  GUDG107	BYTE >03,>8F,>DF,>FF,>FF,>E7,>C7,>C7 ; Character 107
     62D7 8F  
     62D8 DF  
     62D9 FF  
     62DA FF  
     62DB E7  
     62DC C7  
     62DD C7  
0014 62DE 00  GUDG108	BYTE >00,>C7,>E7,>E7,>E7,>F7,>F7,>F7 ; Character 108
     62DF C7  
     62E0 E7  
     62E1 E7  
     62E2 E7  
     62E3 F7  
     62E4 F7  
     62E5 F7  
0015 62E6 00  GUDG109	BYTE >00,>F3,>FF,>FF,>FF,>F3,>F3,>F3 ; Character 109
     62E7 F3  
     62E8 FF  
     62E9 FF  
     62EA FF  
     62EB F3  
     62EC F3  
     62ED F3  
0016 62EE C0  GUDG110	BYTE >C0,>F1,>FB,>FF,>FF,>FC,>F8,>F8 ; Character 110
     62EF F1  
     62F0 FB  
     62F1 FF  
     62F2 FF  
     62F3 FC  
     62F4 F8  
     62F5 F8  
0017 62F6 60  GUDG111	BYTE >60,>F8,>FC,>FC,>FC,>FE,>FE,>FE ; Character 111
     62F7 F8  
     62F8 FC  
     62F9 FC  
     62FA FC  
     62FB FE  
     62FC FE  
     62FD FE  
0018 62FE 00  GUDG112	BYTE >00,>FC,>FE,>FE,>7E,>7E,>7E,>7E ; Character 112
     62FF FC  
     6300 FE  
     6301 FE  
     6302 7E  
     6303 7E  
     6304 7E  
     6305 7E  
0019 6306 00  GUDG113	BYTE >00,>3F,>3F,>7F,>7F,>7F,>7E,>7E ; Character 113
     6307 3F  
     6308 3F  
     6309 7F  
     630A 7F  
     630B 7F  
     630C 7E  
     630D 7E  
0020 630E 7F  GUDG114	BYTE >7F,>7E,>7E,>7E,>7E,>00,>00,>00 ; Character 114
     630F 7E  
     6310 7E  
     6311 7E  
     6312 7E  
     6313 00  
     6314 00  
     6315 00  
0021 6316 3F  GUDG115	BYTE >3F,>3F,>3F,>3F,>3F,>7F,>7F,>FF ; Character 115
     6317 3F  
     6318 3F  
     6319 3F  
     631A 3F  
     631B 7F  
     631C 7F  
     631D FF  
0022 631E 80  GUDG116	BYTE >80,>80,>80,>80,>80,>80,>00,>00 ; Character 116
     631F 80  
     6320 80  
     6321 80  
     6322 80  
     6323 80  
     6324 00  
     6325 00  
0023 6326 FE  GUDG117	BYTE >FE,>FE,>FE,>FE,>FE,>FE,>FE,>FE ; Character 117
     6327 FE  
     6328 FE  
     6329 FE  
     632A FE  
     632B FE  
     632C FE  
     632D FE  
0024 632E 7F  GUDG118	BYTE >7F,>7F,>7F,>7F,>7F,>7F,>7F,>7F ; Character 118
     632F 7F  
     6330 7F  
     6331 7F  
     6332 7F  
     6333 7F  
     6334 7F  
     6335 7F  
0025 6336 3F  GUDG119	BYTE >3F,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 119
     6337 3F  
     6338 3F  
     6339 3F  
     633A 3F  
     633B 3F  
     633C 3F  
     633D 3F  
0026 633E F9  GUDG120	BYTE >F9,>C1,>C1,>81,>81,>81,>81,>81 ; Character 120
     633F C1  
     6340 C1  
     6341 81  
     6342 81  
     6343 81  
     6344 81  
     6345 81  
0027 6346 FC  GUDG121	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>FC,>FC ; Character 121
     6347 FC  
     6348 FC  
     6349 FC  
     634A FC  
     634B FC  
     634C FC  
     634D FC  
0028 634E 9F  GUDG122	BYTE >9F,>9F,>9F,>9F,>9F,>9F,>9F,>9F ; Character 122
     634F 9F  
     6350 9F  
     6351 9F  
     6352 9F  
     6353 9F  
     6354 9F  
     6355 9F  
0029 6356 C7  GUDG123	BYTE >C7,>C7,>C7,>C7,>C7,>C7,>C7,>C7 ; Character 123
     6357 C7  
     6358 C7  
     6359 C7  
     635A C7  
     635B C7  
     635C C7  
     635D C7  
0030 635E F7  GUDG124	BYTE >F7,>F7,>F7,>F7,>F7,>F7,>F7,>F7 ; Character 124
     635F F7  
     6360 F7  
     6361 F7  
     6362 F7  
     6363 F7  
     6364 F7  
     6365 F7  
0031 6366 F3  GUDG125	BYTE >F3,>F3,>F3,>F3,>F3,>F3,>F3,>F3 ; Character 125
     6367 F3  
     6368 F3  
     6369 F3  
     636A F3  
     636B F3  
     636C F3  
     636D F3  
0032 636E F8  GUDG126	BYTE >F8,>F8,>F8,>F8,>F8,>F8,>F8,>F8 ; Character 126
     636F F8  
     6370 F8  
     6371 F8  
     6372 F8  
     6373 F8  
     6374 F8  
     6375 F8  
0033 6376 7E  GUDG127	BYTE >7E,>3F,>3F,>3F,>3F,>3F,>1F,>1F ; Character 127
     6377 3F  
     6378 3F  
     6379 3F  
     637A 3F  
     637B 3F  
     637C 1F  
     637D 1F  
0034 637E 7E  GUDG128	BYTE >7E,>7E,>7E,>7E,>7E,>7E,>FC,>FC ; Character 128
     637F 7E  
     6380 7E  
     6381 7E  
     6382 7E  
     6383 7E  
     6384 FC  
     6385 FC  
0035 6386 00  GUDG129	BYTE >00,>01,>01,>03,>07,>07,>0F,>0F ; Character 129
     6387 01  
     6388 01  
     6389 03  
     638A 07  
     638B 07  
     638C 0F  
     638D 0F  
0036 638E FF  GUDG130	BYTE >FF,>FE,>FC,>FC,>F8,>F8,>F0,>E0 ; Character 130
     638F FE  
     6390 FC  
     6391 FC  
     6392 F8  
     6393 F8  
     6394 F0  
     6395 E0  
0037 6396 FE  GUDG131	BYTE >FE,>FF,>7F,>7F,>3F,>00,>FE,>FE ; Character 131
     6397 FF  
     6398 7F  
     6399 7F  
     639A 3F  
     639B 00  
     639C FE  
     639D FE  
0038 639E 7F  GUDG132	BYTE >7F,>FF,>FF,>FF,>7F,>7F,>7F,>7F ; Character 132
     639F FF  
     63A0 FF  
     63A1 FF  
     63A2 7F  
     63A3 7F  
     63A4 7F  
     63A5 7F  
0039 63A6 81  GUDG133	BYTE >81,>81,>81,>81,>80,>80,>80,>80 ; Character 133
     63A7 81  
     63A8 81  
     63A9 81  
     63AA 80  
     63AB 80  
     63AC 80  
     63AD 80  
0040 63AE FC  GUDG134	BYTE >FC,>FC,>FC,>FC,>FF,>FF,>7F,>1F ; Character 134
     63AF FC  
     63B0 FC  
     63B1 FC  
     63B2 FF  
     63B3 FF  
     63B4 7F  
     63B5 1F  
0041 63B6 FE  GUDG135	BYTE >FE,>FE,>FE,>FE,>FC,>FC,>F8,>E0 ; Character 135
     63B7 FE  
     63B8 FE  
     63B9 FE  
     63BA FC  
     63BB FC  
     63BC F8  
     63BD E0  
0042 63BE 1F  GUDG136	BYTE >1F,>1F,>1F,>0F,>0F,>0F,>0F,>1F ; Character 136
     63BF 1F  
     63C0 1F  
     63C1 0F  
     63C2 0F  
     63C3 0F  
     63C4 0F  
     63C5 1F  
0043 63C6 FC  GUDG137	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>F8,>F8 ; Character 137
     63C7 FC  
     63C8 FC  
     63C9 FC  
     63CA FC  
     63CB FC  
     63CC F8  
     63CD F8  
0044 63CE 1F  GUDG138	BYTE >1F,>3F,>3F,>7F,>7F,>7F,>7F,>7F ; Character 138
     63CF 3F  
     63D0 3F  
     63D1 7F  
     63D2 7F  
     63D3 7F  
     63D4 7F  
     63D5 7F  
0045 63D6 E0  GUDG139	BYTE >E0,>C0,>80,>FF,>FF,>FF,>FF,>FF ; Character 139
     63D7 C0  
     63D8 80  
     63D9 FF  
     63DA FF  
     63DB FF  
     63DC FF  
     63DD FF  
0046 63DE 00  GUDG140	BYTE >00,>00,>00,>00,>80,>80,>80,>80 ; Character 140
     63DF 00  
     63E0 00  
     63E1 00  
     63E2 80  
     63E3 80  
     63E4 80  
     63E5 80  
0047 63E6 FF  GUDG141	BYTE >FF,>7F,>3F,>0F,>00,>00,>00,>00 ; Character 141
     63E7 7F  
     63E8 3F  
     63E9 0F  
     63EA 00  
     63EB 00  
     63EC 00  
     63ED 00  
0048 63EE FF  GUDG142	BYTE >FF,>FE,>FC,>F0,>00,>00,>00,>00 ; Character 142
     63EF FE  
     63F0 FC  
     63F1 F0  
     63F2 00  
     63F3 00  
     63F4 00  
     63F5 00  
0049 63F6 3F  GUDG143	BYTE >3F,>3F,>3F,>00,>00,>00,>00,>00 ; Character 143
     63F7 3F  
     63F8 3F  
     63F9 00  
     63FA 00  
     63FB 00  
     63FC 00  
     63FD 00  
0050 63FE F8  GUDG144	BYTE >F8,>F0,>E0,>00,>00,>00,>00,>00 ; Character 144
     63FF F0  
     6400 E0  
     6401 00  
     6402 00  
     6403 00  
     6404 00  
     6405 00  
0051 6406 00  GUDG145	BYTE >00,>00,>00,>3E,>60,>60,>60,>60 ; Character 145
     6407 00  
     6408 00  
     6409 3E  
     640A 60  
     640B 60  
     640C 60  
     640D 60  
0052 640E 00  GUDG146	BYTE >00,>00,>00,>3E,>66,>43,>C3,>43 ; Character 146
     640F 00  
     6410 00  
     6411 3E  
     6412 66  
     6413 43  
     6414 C3  
     6415 43  
0053 6416 00  GUDG147	BYTE >00,>00,>00,>63,>73,>7B,>6F,>6F ; Character 147
     6417 00  
     6418 00  
     6419 63  
     641A 73  
     641B 7B  
     641C 6F  
     641D 6F  
0054 641E 00  GUDG148	BYTE >00,>00,>00,>7C,>60,>60,>7C,>60 ; Character 148
     641F 00  
     6420 00  
     6421 7C  
     6422 60  
     6423 60  
     6424 7C  
     6425 60  
0055 6426 00  GUDG149	BYTE >00,>00,>00,>C7,>CC,>CC,>CC,>CC ; Character 149
     6427 00  
     6428 00  
     6429 C7  
     642A CC  
     642B CC  
     642C CC  
     642D CC  
0056 642E 00  GUDG150	BYTE >00,>00,>00,>C0,>00,>00,>C0,>E0 ; Character 150
     642F 00  
     6430 00  
     6431 C0  
     6432 00  
     6433 00  
     6434 C0  
     6435 E0  
0057 6436 60  GUDG151	BYTE >60,>32,>1E,>00,>00,>00,>00,>00 ; Character 151
     6437 32  
     6438 1E  
     6439 00  
     643A 00  
     643B 00  
     643C 00  
     643D 00  
0058 643E 62  GUDG152	BYTE >62,>76,>3C,>00,>00,>00,>00,>00 ; Character 152
     643F 76  
     6440 3C  
     6441 00  
     6442 00  
     6443 00  
     6444 00  
     6445 00  
0059 6446 67  GUDG153	BYTE >67,>67,>63,>00,>00,>00,>00,>00 ; Character 153
     6447 67  
     6448 63  
     6449 00  
     644A 00  
     644B 00  
     644C 00  
     644D 00  
0060 644E 60  GUDG154	BYTE >60,>60,>60,>00,>00,>00,>00,>00 ; Character 154
     644F 60  
     6450 60  
     6451 00  
     6452 00  
     6453 00  
     6454 00  
     6455 00  
0061 6456 CC  GUDG155	BYTE >CC,>CE,>C7,>00,>00,>00,>00,>00 ; Character 155
     6457 CE  
     6458 C7  
     6459 00  
     645A 00  
     645B 00  
     645C 00  
     645D 00  
0062 645E 60  GUDG156	BYTE >60,>E0,>C0,>00,>00,>00,>00,>00 ; Character 156
     645F E0  
     6460 C0  
     6461 00  
     6462 00  
     6463 00  
     6464 00  
     6465 00  
0063 6466 61  GLINE1_25 BYTE >61,>62,>63
     6467 62  
     6468 63  
0064 6469 64  GLINE2_25 BYTE >64,>65,>66,>67,>68,>69,>66,>6A,>6B,>6C,>6D,>6E,>6F,>70,>71,>72,>73,>74
     646A 65  
     646B 66  
     646C 67  
     646D 68  
     646E 69  
     646F 66  
     6470 6A  
     6471 6B  
     6472 6C  
     6473 6D  
     6474 6E  
     6475 6F  
     6476 70  
     6477 71  
     6478 72  
     6479 73  
     647A 74  
0065 647B 75  GLINE3_24 BYTE >75,>76,>77,>78,>79,>75,>77,>7A,>7B,>7C,>7D,>7E,>75,>7F,>80,>81,>82
     647C 76  
     647D 77  
     647E 78  
     647F 79  
     6480 75  
     6481 77  
     6482 7A  
     6483 7B  
     6484 7C  
     6485 7D  
     6486 7E  
     6487 75  
     6488 7F  
     6489 80  
     648A 81  
     648B 82  
0066 648C 83  GLINE4_25 BYTE >83,>84,>77,>85,>86,>87,>77,>7A,>7B,>7C,>7D,>7E,>75,>88,>89,>8A,>8B,>8C
     648D 84  
     648E 77  
     648F 85  
     6490 86  
     6491 87  
     6492 77  
     6493 7A  
     6494 7B  
     6495 7C  
     6496 7D  
     6497 7E  
     6498 75  
     6499 88  
     649A 89  
     649B 8A  
     649C 8B  
     649D 8C  
0067 649E 8D  GLINE5_9 BYTE >8D,>8E
     649F 8E  
0068 64A0 8F  GLINE5_28 BYTE >8F,>90,>91,>92,>93,>94,>95,>96
     64A1 90  
     64A2 91  
     64A3 92  
     64A4 93  
     64A5 94  
     64A6 95  
     64A7 96  
0069 64A8 97  GLINE6_28 BYTE >97,>98,>99,>9A,>9B,>9C
     64A9 98  
     64AA 99  
     64AB 9A  
     64AC 9B  
     64AD 9C  
0070          
0071          G_SCR1
0072 64AE 31      MOVE >01E8,G@GUDG96,V@>0B00 ; Copy our screen chars
     64AF 01  
     64B0 E8
     64B1 AB  
     64B2 00
     64B3 62  
     64B4 7E
0073          
0074 64B5 31  	MOVE >0003,G@GLINE1_25,V@>0036
     64B6 00  
     64B7 03
     64B8 A0  
     64B9 36
     64BA 64  
     64BB 66
0075 64BC 31  	MOVE >0012,G@GLINE2_25,V@>0047
     64BD 00  
     64BE 12
     64BF A0  
     64C0 47
     64C1 64  
     64C2 69
0076 64C3 31  	MOVE >0011,G@GLINE3_24,V@>0067
     64C4 00  
     64C5 11
     64C6 A0  
     64C7 67
     64C8 64  
     64C9 7B
0077 64CA 31  	MOVE >0012,G@GLINE4_25,V@>0087
     64CB 00  
     64CC 12
     64CD A0  
     64CE 87
     64CF 64  
     64D0 8C
0078 64D1 31  	MOVE >0002,G@GLINE5_9,V@>00A7
     64D2 00  
     64D3 02
     64D4 A0  
     64D5 A7
     64D6 64  
     64D7 9E
0079 64D8 31  	MOVE >0008,G@GLINE5_28,V@>00B4
     64D9 00  
     64DA 08
     64DB A0  
     64DC B4
     64DD 64  
     64DE A0
0080 64DF 31  	MOVE >0006,G@GLINE6_28,V@>00D6
     64E0 00  
     64E1 06
     64E2 A0  
     64E3 D6
     64E4 64  
     64E5 A8
0081          
0082 64E6 00      RTN
0083          
