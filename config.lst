XGA99 CROSS-ASSEMBLER   VERSION 3.0.1
              > config.gpl
0001          * config.gpl
0002          * Configurator for GROMMY2
0003          * At this point this is just a demo how to render the generated screen.gpl
0004          * EP 2023-11-26
0005          *
0006          * Compile the GPL code to binary with:
0007          * xga99.py --aorg 0x6000 config.gpl -L config.lst -o config.bin
0008          * output file is config.bin, since the filename ends with g it is treated
0009          * by an emulator such as js99er.net as a GROM file.
0010          *
0011          * This file includes the screen.gpl file at the very end.
0012          *
0013          
0014          LALIGN EQU >02              Left alignment of text
0015          LALIGN2 EQU >05
0016          
0017          
0018          * Grommy2 command buffer in scratchpad
0019          GCMDBYTE EQU >8340
0020          GCMDP2   EQU >8342
0021          GCMDP3   EQU >8343
0022          GCMDP4   EQU >8344
0023          GCMDP5   EQU >8345
0024          GCMDP6   EQU >8346
0025          GCMDP7   EQU >8347
0026          
0027          BANK    EQU >8350           Active bank
0028          SHADOW  EQU >8351           Shadow enable / disable
0029          PAD0    EQU >8352
0030          PAD1    EQU >8353
0031          PAD2    EQU >8354
0032          PAD3    EQU >8355
0033          
0034          SCANKEY EQU >8375
0035          * Hardware interface address
0036          HWIF     EQU >5FF0
0037          
0038          
0039 6000 AA  G6000  DATA >AA01             standard header  version 1
     6001 01
0040 6002 00         DATA >0000             # of programs 0
     6003 00
0041 6004 00         DATA >0000             no power up
     6005 00
0042 6006 60         DATA G6010             program
     6007 10
0043 6008 00         DATA >0000             DSRs
     6009 00
0044 600A 00         DATA >0000             subprograms
     600B 00
0045 600C 00         DATA >0000
     600D 00
0046 600E 00         DATA >0000
     600F 00
0047          
0048 6010 00  G6010  DATA >0000         * No next program
     6011 00
0049 6012 60         DATA GPROG
     6013 2A
0050 6014 0E         STRI 'GROMMY2 CONFIG'
     6015 47  
     6016 52  
     6017 4F  
     6018 4D  
     6019 4D  
     601A 59  
     601B 32  
     601C 20  
     601D 43  
     601E 4F  
     601F 4E  
     6020 46  
     6021 49  
     6022 47  
0051          
0052          GVREGS
0053 6023 E0      BYTE  >E0              VDP registers values: standard mode
0054 6024 00      BYTE  >00              screen image at >0000
0055 6025 0E      BYTE  >0E              color table at >0380
0056 6026 01      BYTE  >01              char patterns at >0800
0057 6027 06      BYTE  >06              sprite attributes at >0300
0058 6028 00      BYTE  >00              sprite patterns at >0000
0059 6029 F5      BYTE  >F5              text/screen colors: white / light blue
0060          
0061          GPROG
0062 602A 86      CLR   @>8374
     602B 74  
0063 602C BF      DST   >0900,@>834A     load upper case chars 32->
     602D 4A  
     602E 09  
     602F 00
0064 6030 06      CALL  G@>0018
     6031 00  
     6032 18
0065          * Setup roughly as with mini memory
0066 6033 39      MOVE >0007,G@GVREGS,#>01    Set VDP Regs
     6034 00  
     6035 07
     6036 01  
     6037 60  
     6038 23
0067 6039 86      CLR   V@>0800          clear charpats 0-31
     603A A8  
     603B 00
0068 603C 35      MOVE  >00FF,V@>0800,V@>0801
     603D 00  
     603E FF
     603F A8  
     6040 01
     6041 A8  
     6042 00
0069          
0070 6043 BE      ST    >7E,@>8373       init subroutine stack
     6044 73  
     6045 7E  
0071 6046 87      DCLR  @>8322           clear error code
     6047 22  
0072 6048 87      DCLR  @>8348           clear flags
     6049 48  
0073          
0074 604A 86      CLR    @BANK           Actually init from grommy2
     604B 50  
0075 604C 86      CLR    @SHADOW         Actually init from grommy2
     604D 51  
0076          
0077 604E 06      CALL G@GVDPSETUP
     604F 62  
     6050 2E
0078          
0079 6051 06      CALL G@G_SCR1       ; Setup the screen which was automatically generated
     6052 64  
     6053 72
0080          * Use the FMT token to add some strings on the screen
0081 6054 08      FMT
0082 6055 FF      COL LALIGN
     6056 02  
0083 6057 FE      ROW >07
     6058 07  
0084 6059 1D      HTEX 'VERSION 0.0.00 BANK 0 SHADOW 0'
     605A 56  
     605B 45  
     605C 52  
     605D 53  
     605E 49  
     605F 4F  
     6060 4E  
     6061 20  
     6062 30  
     6063 2E  
     6064 30  
     6065 2E  
     6066 30  
     6067 30  
     6068 20  
     6069 42  
     606A 41  
     606B 4E  
     606C 4B  
     606D 20  
     606E 30  
     606F 20  
     6070 53  
     6071 48  
     6072 41  
     6073 44  
     6074 4F  
     6075 57  
     6076 20  
     6077 30  
0085 6078 A1      ROW+ >02
0086 6079 FF      COL LALIGN
     607A 02  
0087 607B 19      HTEX 'SELECT BANK FOR GROM READS'
     607C 53  
     607D 45  
     607E 4C  
     607F 45  
     6080 43  
     6081 54  
     6082 20  
     6083 42  
     6084 41  
     6085 4E  
     6086 4B  
     6087 20  
     6088 46  
     6089 4F  
     608A 52  
     608B 20  
     608C 47  
     608D 52  
     608E 4F  
     608F 4D  
     6090 20  
     6091 52  
     6092 45  
     6093 41  
     6094 44  
     6095 53  
0088 6096 A0      ROW+ >01
0089 6097 FF      COL LALIGN2
     6098 05  
0090 6099 0C      HTEX '0 SYSTEM BANK'
     609A 30  
     609B 20  
     609C 53  
     609D 59  
     609E 53  
     609F 54  
     60A0 45  
     60A1 4D  
     60A2 20  
     60A3 42  
     60A4 41  
     60A5 4E  
     60A6 4B  
0091 60A7 A0      ROW+ >01
0092 60A8 FF      COL LALIGN2
     60A9 05  
0093 60AA 0C      HTEX '1 USER BANK 1'
     60AB 31  
     60AC 20  
     60AD 55  
     60AE 53  
     60AF 45  
     60B0 52  
     60B1 20  
     60B2 42  
     60B3 41  
     60B4 4E  
     60B5 4B  
     60B6 20  
     60B7 31  
0094 60B8 A0      ROW+ >01
0095 60B9 FF      COL LALIGN2
     60BA 05  
0096 60BB 0C      HTEX '2 USER BANK 2'
     60BC 32  
     60BD 20  
     60BE 55  
     60BF 53  
     60C0 45  
     60C1 52  
     60C2 20  
     60C3 42  
     60C4 41  
     60C5 4E  
     60C6 4B  
     60C7 20  
     60C8 32  
0097 60C9 A0      ROW+ >01
0098 60CA FF      COL LALIGN2
     60CB 05  
0099 60CC 0A      HTEX '3 GRAM BANK'
     60CD 33  
     60CE 20  
     60CF 47  
     60D0 52  
     60D1 41  
     60D2 4D  
     60D3 20  
     60D4 42  
     60D5 41  
     60D6 4E  
     60D7 4B  
0100          
0101 60D8 A1      ROW+ >02
0102 60D9 FF      COL LALIGN
     60DA 02  
0103 60DB 09      HTEX 'SHADOW RAM'
     60DC 53  
     60DD 48  
     60DE 41  
     60DF 44  
     60E0 4F  
     60E1 57  
     60E2 20  
     60E3 52  
     60E4 41  
     60E5 4D  
0104 60E6 A0      ROW+ >01
0105 60E7 FF      COL LALIGN2
     60E8 05  
0106 60E9 07      HTEX '4 ENABLE'
     60EA 34  
     60EB 20  
     60EC 45  
     60ED 4E  
     60EE 41  
     60EF 42  
     60F0 4C  
     60F1 45  
0107 60F2 A0      ROW+ >01
0108 60F3 FF      COL LALIGN2
     60F4 05  
0109 60F5 08      HTEX '5 DISABLE'
     60F6 35  
     60F7 20  
     60F8 44  
     60F9 49  
     60FA 53  
     60FB 41  
     60FC 42  
     60FD 4C  
     60FE 45  
0110          
0111 60FF A1      ROW+ >02
0112 6100 FF      COL LALIGN
     6101 02  
0113 6102 11      HTEX 'FLASH GRAM TO BANK'
     6103 46  
     6104 4C  
     6105 41  
     6106 53  
     6107 48  
     6108 20  
     6109 47  
     610A 52  
     610B 41  
     610C 4D  
     610D 20  
     610E 54  
     610F 4F  
     6110 20  
     6111 42  
     6112 41  
     6113 4E  
     6114 4B  
0114 6115 A0      ROW+ >01
0115 6116 FF      COL LALIGN2
     6117 05  
0116 6118 0C      HTEX '6 USER BANK 1'
     6119 36  
     611A 20  
     611B 55  
     611C 53  
     611D 45  
     611E 52  
     611F 20  
     6120 42  
     6121 41  
     6122 4E  
     6123 4B  
     6124 20  
     6125 31  
0117 6126 A0      ROW+ >01
0118 6127 FF      COL LALIGN2
     6128 05  
0119 6129 0C      HTEX '7 USER BANK 2'
     612A 37  
     612B 20  
     612C 55  
     612D 53  
     612E 45  
     612F 52  
     6130 20  
     6131 42  
     6132 41  
     6133 4E  
     6134 4B  
     6135 20  
     6136 32  
0120 6137 FB      FEND
0121          
0122          * Pattern address of character 0xFF
0123          PATADR EQU >0800+(255*8)
0124          * Test a couple of chars
0125 6138 31      MOVE 24,G@DENSE_FONT,V@PATADR-24
     6139 00  
     613A 18
     613B AF  
     613C 0F
     613D E0
     613E 61  
     613F FA
0126 6140 BE      ST >FC,V@>1C
     6141 A0  
     6142 1C
     6143 FC  
0127 6144 BE      ST >FD,V@>1D
     6145 A0  
     6146 1D
     6147 FD  
0128 6148 BE      ST >FE,V@>1E
     6149 A0  
     614A 1E
     614B FE  
0129          
0130          GWAIT
0131 614C 03      SCAN
0132 614D 61      BS    GOTKEY
     614E 5B  
0133          * We did not get a key. Animate something.
0134 614F BE      ST    >FF,V@>001F      Write char FF to top left corner
     6150 A0  
     6151 1F
     6152 FF  
0135 6153 A2      ADD   1,V@PATADR
     6154 AF  
     6155 0F
     6156 F8
     6157 01  
0136 6158 05      B    G@GWAIT          wait for the user to press a key
     6159 61  
     615A 4C
0137          
0138          
0139          GOTKEY
0140 615B CE      CGT   '0'-1,@SCANKEY       greater than >= 0
     615C 75  
     615D 2F  
0141 615E 41      BR    GG01              no skip forward
     615F 91  
0142 6160 CE      CGT   '9',@SCANKEY        Key greater than '9'?
     6161 75  
     6162 39  
0143 6163 61      BS    GG01              Yes: skip forward
     6164 91  
0144 6165 A6      SUB   '0',@SCANKEY
     6166 75  
     6167 30  
0145 6168 8A      CASE  @SCANKEY
     6169 75  
0146 616A 41      BR    KEY0
     616B 8C  
0147 616C 41      BR    KEY1
     616D 8C  
0148 616E 41      BR    KEY2
     616F 8C  
0149 6170 41      BR    KEY3
     6171 8C  
0150 6172 41      BR    KEY4
     6173 7E  
0151 6174 41      BR    KEY5
     6175 83  
0152 6176 41      BR    KEY6
     6177 87  
0153 6178 41      BR    KEY7
     6179 91  
0154 617A 41      BR    KEY8
     617B 91  
0155 617C 41      BR    KEY9
     617D 91  
0156          
0157          
0158 617E BE  KEY4:   ST  1,@SHADOW
     617F 51  
     6180 01  
0159 6181 41      BR  GG01
     6182 91  
0160 6183 86  KEY5:   CLR @SHADOW
     6184 51  
0161 6185 41      BR  GG01
     6186 91  
0162 6187 BE  KEY6:   ST 2,@SHADOW
     6188 51  
     6189 02  
0163 618A 41      BR  GG01
     618B 91  
0164          
0165          KEY0
0166          KEY1
0167          KEY2
0168          KEY3
0169 618C BC      ST @SCANKEY,@BANK
     618D 50  
     618E 75  
0170 618F 41      BR GG01
     6190 91  
0171          KEY7
0172          KEY8
0173          KEY9
0174          
0175          
0176          GG01
0177 6191 D6      CEQ   >0F,@SCANKEY       is it Fctn-9?
     6192 75  
     6193 0F  
0178 6194 41      BR    G@GCONT2         no: GCONT2
     6195 97  
0179 6196 0B      EXIT                   yes: reset the TI-99/4A
0180          GCONT2
0181 6197 D6      CEQ   '6',@SCANKEY      is it 6?
     6198 75  
     6199 36  
0182 619A 61      BS    UMMA
     619B D1  
0183          
0184          
0185          * Update screen to reflect current status
0186          GUPDATE
0187 619C BE      ST  '0',@PAD0
     619D 52  
     619E 30  
0188 619F A0      ADD @SHADOW,@PAD0
     61A0 52  
     61A1 51  
0189 61A2 BC      ST  @PAD0,V@>00FF        Write to VRAM
     61A3 A0  
     61A4 FF
     61A5 52  
0190          
0191 61A6 BE      ST  '0',@PAD0
     61A7 52  
     61A8 30  
0192 61A9 A0      ADD @BANK,@PAD0
     61AA 52  
     61AB 50  
0193 61AC BC      ST  @PAD0,V@>00F6        Write to VRAM
     61AD A0  
     61AE F6
     61AF 52  
0194          
0195          
0196          * Update GROM read bank. First erase bank markings.
0197          BANKOFS EQU >164
0198 61B0 BE      ST ' ',V@BANKOFS
     61B1 A1  
     61B2 64
     61B3 20  
0199 61B4 BE      ST ' ',V@BANKOFS+>20
     61B5 A1  
     61B6 84
     61B7 20  
0200 61B8 BE      ST ' ',V@BANKOFS+>40
     61B9 A1  
     61BA A4
     61BB 20  
0201 61BC BE      ST ' ',V@BANKOFS+>60
     61BD A1  
     61BE C4
     61BF 20  
0202 61C0 87      DCLR @PAD0
     61C1 52  
0203 61C2 BC      ST   @BANK,@PAD3        Copy to low byte the bank #
     61C3 55  
     61C4 50  
0204 61C5 E3      DSLL 5,@PAD2          Shift by 5 to get 32 chars per line
     61C6 54  
     61C7 00  
     61C8 05
0205 61C9 BE      ST  '*',V@>164(@PAD2)   Screen offset 102
     61CA E1  
     61CB 64
     61CC 54
     61CD 2A  
0206          
0207 61CE 05      B   G@GWAIT
     61CF 61  
     61D0 4C
0208          
0209 61D1 BE  UMMA ST 2,@SHADOW
     61D2 51  
     61D3 02  
0210 61D4 41      BR GUPDATE
     61D5 9C  
0211          
0212          *----------------------------------------
0213          * Init command buffer in pad
0214          *----------------------------------------
0215          GINITCMD
0216 61D6 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    Copy command template from GROM
     61D7 00  
     61D8 10
     61D9 40  
     61DA 61  
     61DB EA
0217 61DC 00         RTN
0218          
0219          *----------------------------------------
0220          * Send command to grommy2
0221          *----------------------------------------
0222          GSENDCMD
0223 61DD BC         ST   @GCMDBYTE,@GCMDBYTE+1        Setup the complement of command byte
     61DE 41  
     61DF 40  
0224 61E0 BA         XOR   >FF,@GCMDBYTE+1
     61E1 41  
     61E2 FF  
0225 61E3 25         MOVE  >0010,@GCMDBYTE,G@HWIF      Send command to grommy2
     61E4 00  
     61E5 10
     61E6 5F  
     61E7 F0
     61E8 40  
0226 61E9 00         RTN
0227          
0228          
0229          GROMMY_DAT
0230 61EA 00         DATA   >00FF,>003F,>0000,>0000
     61EB FF
     61EC 00  
     61ED 3F
     61EE 00  
     61EF 00
     61F0 00  
     61F1 00
0231 61F2 45         TEXT 'EPGROMMY'
     61F3 50  
     61F4 47  
     61F5 52  
     61F6 4F  
     61F7 4D  
     61F8 4D  
     61F9 59  
0232          
0233          
0234          DENSE_FONT ; Define character cells wihtin 4x8 cell
0235          ; Numnbers 0 and 1
0236 61FA 22          BYTE >22
0237 61FB 56          BYTE >56
0238 61FC 52          BYTE >52
0239 61FD 52          BYTE >52
0240 61FE 52          BYTE >52
0241 61FF 52          BYTE >52
0242 6200 27          BYTE >27
0243 6201 00          BYTE >00
0244          ; Define a cell with 2 and 3
0245 6202 26          BYTE >26
0246 6203 51          BYTE >51
0247 6204 11          BYTE >11
0248 6205 26          BYTE >26
0249 6206 41          BYTE >41
0250 6207 41          BYTE >41
0251 6208 76          BYTE >76
0252 6209 00          BYTE >00
0253          ; Define a cell with 4 and 5
0254 620A 17          BYTE >17
0255 620B 34          BYTE >34
0256 620C 54          BYTE >54
0257 620D 76          BYTE >76
0258 620E 11          BYTE >11
0259 620F 11          BYTE >11
0260 6210 16          BYTE >16
0261 6211 00          BYTE >00
0262          
0263          * Test code copied from Mini Memory
0264 6212 31         MOVE  >0010,G@GROMMY_DAT,@GCMDBYTE    place parameter string in PAD
     6213 00  
     6214 10
     6215 40  
     6216 61  
     6217 EA
0265 6218 BC         ST    @>839A,@>8340                Copy command byte
     6219 40  
     621A 80  
     621B 9A
0266 621C BC         ST    @>839A,@>8341                The second byte is its complement
     621D 41  
     621E 80  
     621F 9A
0267 6220 BA         XOR   >FF,@>8341
     6221 41  
     6222 FF  
0268 6223 BC         ST    @>839B,@>8342                Copy p2.
     6224 42  
     6225 80  
     6226 9B
0269 6227 25         MOVE  >0010,@>8340,G@HWIF         Copy from PAD @8340 to GRAM @5FF0. Does this work? Yes!
     6228 00  
     6229 10
     622A 5F  
     622B F0
     622C 40  
0270 622D 00         RTN
0271          
0272          
0273          *----------------------------------------
0274          * VDP setup for module
0275          *----------------------------------------
0276          GVDPSETUP
0277 622E BE      ST    >D0,V@>0300      no sprites
     622F A3  
     6230 00
     6231 D0  
0278 6232 BE      ST    >F5,V@>0380      init color table as white on blue for all chars
     6233 A3  
     6234 80
     6235 F5  
0279 6236 35      MOVE  >001F,V@>0380,V@>0381
     6237 00  
     6238 1F
     6239 A3  
     623A 81
     623B A3  
     623C 80
0280 623D 07      ALL   >20              erase screen
     623E 20  
0281 623F 04      BACK  >F5              screen colors: white on light blue
     6240 F5  
0282 6241 00      RTN
0283          
0284              COPY 'screen.gpl'
              > screen.gpl
0001          * Character definitions
0002 6242 00  GUDG96	BYTE >00,>00,>00,>00,>00,>00,>00,>00 ; Character 96
     6243 00  
     6244 00  
     6245 00  
     6246 00  
     6247 00  
     6248 00  
     6249 00  
0003 624A 00  GUDG97	BYTE >00,>00,>00,>03,>0F,>1F,>3F,>3F ; Character 97
     624B 00  
     624C 00  
     624D 03  
     624E 0F  
     624F 1F  
     6250 3F  
     6251 3F  
0004 6252 00  GUDG98	BYTE >00,>00,>00,>F0,>FC,>FE,>FF,>FF ; Character 98
     6253 00  
     6254 00  
     6255 F0  
     6256 FC  
     6257 FE  
     6258 FF  
     6259 FF  
0005 625A 00  GUDG99	BYTE >00,>00,>00,>00,>00,>00,>00,>80 ; Character 99
     625B 00  
     625C 00  
     625D 00  
     625E 00  
     625F 00  
     6260 00  
     6261 80  
0006 6262 1C  GUDG100	BYTE >1C,>3F,>7F,>FF,>FF,>FE,>FE,>FE ; Character 100
     6263 3F  
     6264 7F  
     6265 FF  
     6266 FF  
     6267 FE  
     6268 FE  
     6269 FE  
0007 626A 00  GUDG101	BYTE >00,>3F,>FF,>FF,>FF,>7F,>7F,>7F ; Character 101
     626B 3F  
     626C FF  
     626D FF  
     626E FF  
     626F 7F  
     6270 7F  
     6271 7F  
0008 6272 00  GUDG102	BYTE >00,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 102
     6273 3F  
     6274 3F  
     6275 3F  
     6276 3F  
     6277 3F  
     6278 3F  
     6279 3F  
0009 627A 00  GUDG103	BYTE >00,>9C,>BC,>FC,>FC,>FD,>FD,>FD ; Character 103
     627B 9C  
     627C BC  
     627D FC  
     627E FC  
     627F FD  
     6280 FD  
     6281 FD  
0010 6282 07  GUDG104	BYTE >07,>3F,>7F,>FF,>FF,>FC,>FC,>FC ; Character 104
     6283 3F  
     6284 7F  
     6285 FF  
     6286 FF  
     6287 FC  
     6288 FC  
     6289 FC  
0011 628A 00  GUDG105	BYTE >00,>F0,>F8,>FC,>FE,>FE,>FE,>FE ; Character 105
     628B F0  
     628C F8  
     628D FC  
     628E FE  
     628F FE  
     6290 FE  
     6291 FE  
0012 6292 06  GUDG106	BYTE >06,>9F,>FF,>FF,>FF,>9F,>9F,>9F ; Character 106
     6293 9F  
     6294 FF  
     6295 FF  
     6296 FF  
     6297 9F  
     6298 9F  
     6299 9F  
0013 629A 03  GUDG107	BYTE >03,>8F,>DF,>FF,>FF,>E7,>C7,>C7 ; Character 107
     629B 8F  
     629C DF  
     629D FF  
     629E FF  
     629F E7  
     62A0 C7  
     62A1 C7  
0014 62A2 00  GUDG108	BYTE >00,>C7,>E7,>E7,>E7,>F7,>F7,>F7 ; Character 108
     62A3 C7  
     62A4 E7  
     62A5 E7  
     62A6 E7  
     62A7 F7  
     62A8 F7  
     62A9 F7  
0015 62AA 00  GUDG109	BYTE >00,>F3,>FF,>FF,>FF,>F3,>F3,>F3 ; Character 109
     62AB F3  
     62AC FF  
     62AD FF  
     62AE FF  
     62AF F3  
     62B0 F3  
     62B1 F3  
0016 62B2 C0  GUDG110	BYTE >C0,>F1,>FB,>FF,>FF,>FC,>F8,>F8 ; Character 110
     62B3 F1  
     62B4 FB  
     62B5 FF  
     62B6 FF  
     62B7 FC  
     62B8 F8  
     62B9 F8  
0017 62BA 60  GUDG111	BYTE >60,>F8,>FC,>FC,>FC,>FE,>FE,>FE ; Character 111
     62BB F8  
     62BC FC  
     62BD FC  
     62BE FC  
     62BF FE  
     62C0 FE  
     62C1 FE  
0018 62C2 00  GUDG112	BYTE >00,>FC,>FE,>FE,>7E,>7E,>7E,>7E ; Character 112
     62C3 FC  
     62C4 FE  
     62C5 FE  
     62C6 7E  
     62C7 7E  
     62C8 7E  
     62C9 7E  
0019 62CA 00  GUDG113	BYTE >00,>3F,>3F,>7F,>7F,>7F,>7E,>7E ; Character 113
     62CB 3F  
     62CC 3F  
     62CD 7F  
     62CE 7F  
     62CF 7F  
     62D0 7E  
     62D1 7E  
0020 62D2 7F  GUDG114	BYTE >7F,>7E,>7E,>7E,>7E,>00,>00,>00 ; Character 114
     62D3 7E  
     62D4 7E  
     62D5 7E  
     62D6 7E  
     62D7 00  
     62D8 00  
     62D9 00  
0021 62DA 3F  GUDG115	BYTE >3F,>3F,>3F,>3F,>3F,>7F,>7F,>FF ; Character 115
     62DB 3F  
     62DC 3F  
     62DD 3F  
     62DE 3F  
     62DF 7F  
     62E0 7F  
     62E1 FF  
0022 62E2 80  GUDG116	BYTE >80,>80,>80,>80,>80,>80,>00,>00 ; Character 116
     62E3 80  
     62E4 80  
     62E5 80  
     62E6 80  
     62E7 80  
     62E8 00  
     62E9 00  
0023 62EA FE  GUDG117	BYTE >FE,>FE,>FE,>FE,>FE,>FE,>FE,>FE ; Character 117
     62EB FE  
     62EC FE  
     62ED FE  
     62EE FE  
     62EF FE  
     62F0 FE  
     62F1 FE  
0024 62F2 7F  GUDG118	BYTE >7F,>7F,>7F,>7F,>7F,>7F,>7F,>7F ; Character 118
     62F3 7F  
     62F4 7F  
     62F5 7F  
     62F6 7F  
     62F7 7F  
     62F8 7F  
     62F9 7F  
0025 62FA 3F  GUDG119	BYTE >3F,>3F,>3F,>3F,>3F,>3F,>3F,>3F ; Character 119
     62FB 3F  
     62FC 3F  
     62FD 3F  
     62FE 3F  
     62FF 3F  
     6300 3F  
     6301 3F  
0026 6302 F9  GUDG120	BYTE >F9,>C1,>C1,>81,>81,>81,>81,>81 ; Character 120
     6303 C1  
     6304 C1  
     6305 81  
     6306 81  
     6307 81  
     6308 81  
     6309 81  
0027 630A FC  GUDG121	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>FC,>FC ; Character 121
     630B FC  
     630C FC  
     630D FC  
     630E FC  
     630F FC  
     6310 FC  
     6311 FC  
0028 6312 9F  GUDG122	BYTE >9F,>9F,>9F,>9F,>9F,>9F,>9F,>9F ; Character 122
     6313 9F  
     6314 9F  
     6315 9F  
     6316 9F  
     6317 9F  
     6318 9F  
     6319 9F  
0029 631A C7  GUDG123	BYTE >C7,>C7,>C7,>C7,>C7,>C7,>C7,>C7 ; Character 123
     631B C7  
     631C C7  
     631D C7  
     631E C7  
     631F C7  
     6320 C7  
     6321 C7  
0030 6322 F7  GUDG124	BYTE >F7,>F7,>F7,>F7,>F7,>F7,>F7,>F7 ; Character 124
     6323 F7  
     6324 F7  
     6325 F7  
     6326 F7  
     6327 F7  
     6328 F7  
     6329 F7  
0031 632A F3  GUDG125	BYTE >F3,>F3,>F3,>F3,>F3,>F3,>F3,>F3 ; Character 125
     632B F3  
     632C F3  
     632D F3  
     632E F3  
     632F F3  
     6330 F3  
     6331 F3  
0032 6332 F8  GUDG126	BYTE >F8,>F8,>F8,>F8,>F8,>F8,>F8,>F8 ; Character 126
     6333 F8  
     6334 F8  
     6335 F8  
     6336 F8  
     6337 F8  
     6338 F8  
     6339 F8  
0033 633A 7E  GUDG127	BYTE >7E,>3F,>3F,>3F,>3F,>3F,>1F,>1F ; Character 127
     633B 3F  
     633C 3F  
     633D 3F  
     633E 3F  
     633F 3F  
     6340 1F  
     6341 1F  
0034 6342 7E  GUDG128	BYTE >7E,>7E,>7E,>7E,>7E,>7E,>FC,>FC ; Character 128
     6343 7E  
     6344 7E  
     6345 7E  
     6346 7E  
     6347 7E  
     6348 FC  
     6349 FC  
0035 634A 00  GUDG129	BYTE >00,>01,>01,>03,>07,>07,>0F,>0F ; Character 129
     634B 01  
     634C 01  
     634D 03  
     634E 07  
     634F 07  
     6350 0F  
     6351 0F  
0036 6352 FF  GUDG130	BYTE >FF,>FE,>FC,>FC,>F8,>F8,>F0,>E0 ; Character 130
     6353 FE  
     6354 FC  
     6355 FC  
     6356 F8  
     6357 F8  
     6358 F0  
     6359 E0  
0037 635A FE  GUDG131	BYTE >FE,>FF,>7F,>7F,>3F,>00,>FE,>FE ; Character 131
     635B FF  
     635C 7F  
     635D 7F  
     635E 3F  
     635F 00  
     6360 FE  
     6361 FE  
0038 6362 7F  GUDG132	BYTE >7F,>FF,>FF,>FF,>7F,>7F,>7F,>7F ; Character 132
     6363 FF  
     6364 FF  
     6365 FF  
     6366 7F  
     6367 7F  
     6368 7F  
     6369 7F  
0039 636A 81  GUDG133	BYTE >81,>81,>81,>81,>80,>80,>80,>80 ; Character 133
     636B 81  
     636C 81  
     636D 81  
     636E 80  
     636F 80  
     6370 80  
     6371 80  
0040 6372 FC  GUDG134	BYTE >FC,>FC,>FC,>FC,>FF,>FF,>7F,>1F ; Character 134
     6373 FC  
     6374 FC  
     6375 FC  
     6376 FF  
     6377 FF  
     6378 7F  
     6379 1F  
0041 637A FE  GUDG135	BYTE >FE,>FE,>FE,>FE,>FC,>FC,>F8,>E0 ; Character 135
     637B FE  
     637C FE  
     637D FE  
     637E FC  
     637F FC  
     6380 F8  
     6381 E0  
0042 6382 1F  GUDG136	BYTE >1F,>1F,>1F,>0F,>0F,>0F,>0F,>1F ; Character 136
     6383 1F  
     6384 1F  
     6385 0F  
     6386 0F  
     6387 0F  
     6388 0F  
     6389 1F  
0043 638A FC  GUDG137	BYTE >FC,>FC,>FC,>FC,>FC,>FC,>F8,>F8 ; Character 137
     638B FC  
     638C FC  
     638D FC  
     638E FC  
     638F FC  
     6390 F8  
     6391 F8  
0044 6392 1F  GUDG138	BYTE >1F,>3F,>3F,>7F,>7F,>7F,>7F,>7F ; Character 138
     6393 3F  
     6394 3F  
     6395 7F  
     6396 7F  
     6397 7F  
     6398 7F  
     6399 7F  
0045 639A E0  GUDG139	BYTE >E0,>C0,>80,>FF,>FF,>FF,>FF,>FF ; Character 139
     639B C0  
     639C 80  
     639D FF  
     639E FF  
     639F FF  
     63A0 FF  
     63A1 FF  
0046 63A2 00  GUDG140	BYTE >00,>00,>00,>00,>80,>80,>80,>80 ; Character 140
     63A3 00  
     63A4 00  
     63A5 00  
     63A6 80  
     63A7 80  
     63A8 80  
     63A9 80  
0047 63AA FF  GUDG141	BYTE >FF,>7F,>3F,>0F,>00,>00,>00,>00 ; Character 141
     63AB 7F  
     63AC 3F  
     63AD 0F  
     63AE 00  
     63AF 00  
     63B0 00  
     63B1 00  
0048 63B2 FF  GUDG142	BYTE >FF,>FE,>FC,>F0,>00,>00,>00,>00 ; Character 142
     63B3 FE  
     63B4 FC  
     63B5 F0  
     63B6 00  
     63B7 00  
     63B8 00  
     63B9 00  
0049 63BA 3F  GUDG143	BYTE >3F,>3F,>3F,>00,>00,>00,>00,>00 ; Character 143
     63BB 3F  
     63BC 3F  
     63BD 00  
     63BE 00  
     63BF 00  
     63C0 00  
     63C1 00  
0050 63C2 F8  GUDG144	BYTE >F8,>F0,>E0,>00,>00,>00,>00,>00 ; Character 144
     63C3 F0  
     63C4 E0  
     63C5 00  
     63C6 00  
     63C7 00  
     63C8 00  
     63C9 00  
0051 63CA 00  GUDG145	BYTE >00,>00,>00,>3E,>60,>60,>60,>60 ; Character 145
     63CB 00  
     63CC 00  
     63CD 3E  
     63CE 60  
     63CF 60  
     63D0 60  
     63D1 60  
0052 63D2 00  GUDG146	BYTE >00,>00,>00,>3E,>66,>43,>C3,>43 ; Character 146
     63D3 00  
     63D4 00  
     63D5 3E  
     63D6 66  
     63D7 43  
     63D8 C3  
     63D9 43  
0053 63DA 00  GUDG147	BYTE >00,>00,>00,>63,>73,>7B,>6F,>6F ; Character 147
     63DB 00  
     63DC 00  
     63DD 63  
     63DE 73  
     63DF 7B  
     63E0 6F  
     63E1 6F  
0054 63E2 00  GUDG148	BYTE >00,>00,>00,>7C,>60,>60,>7C,>60 ; Character 148
     63E3 00  
     63E4 00  
     63E5 7C  
     63E6 60  
     63E7 60  
     63E8 7C  
     63E9 60  
0055 63EA 00  GUDG149	BYTE >00,>00,>00,>C7,>CC,>CC,>CC,>CC ; Character 149
     63EB 00  
     63EC 00  
     63ED C7  
     63EE CC  
     63EF CC  
     63F0 CC  
     63F1 CC  
0056 63F2 00  GUDG150	BYTE >00,>00,>00,>C0,>00,>00,>C0,>E0 ; Character 150
     63F3 00  
     63F4 00  
     63F5 C0  
     63F6 00  
     63F7 00  
     63F8 C0  
     63F9 E0  
0057 63FA 60  GUDG151	BYTE >60,>32,>1E,>00,>00,>00,>00,>00 ; Character 151
     63FB 32  
     63FC 1E  
     63FD 00  
     63FE 00  
     63FF 00  
     6400 00  
     6401 00  
0058 6402 62  GUDG152	BYTE >62,>76,>3C,>00,>00,>00,>00,>00 ; Character 152
     6403 76  
     6404 3C  
     6405 00  
     6406 00  
     6407 00  
     6408 00  
     6409 00  
0059 640A 67  GUDG153	BYTE >67,>67,>63,>00,>00,>00,>00,>00 ; Character 153
     640B 67  
     640C 63  
     640D 00  
     640E 00  
     640F 00  
     6410 00  
     6411 00  
0060 6412 60  GUDG154	BYTE >60,>60,>60,>00,>00,>00,>00,>00 ; Character 154
     6413 60  
     6414 60  
     6415 00  
     6416 00  
     6417 00  
     6418 00  
     6419 00  
0061 641A CC  GUDG155	BYTE >CC,>CE,>C7,>00,>00,>00,>00,>00 ; Character 155
     641B CE  
     641C C7  
     641D 00  
     641E 00  
     641F 00  
     6420 00  
     6421 00  
0062 6422 60  GUDG156	BYTE >60,>E0,>C0,>00,>00,>00,>00,>00 ; Character 156
     6423 E0  
     6424 C0  
     6425 00  
     6426 00  
     6427 00  
     6428 00  
     6429 00  
0063 642A 61  GLINE1_25 BYTE >61,>62,>63
     642B 62  
     642C 63  
0064 642D 64  GLINE2_25 BYTE >64,>65,>66,>67,>68,>69,>66,>6A,>6B,>6C,>6D,>6E,>6F,>70,>71,>72,>73,>74
     642E 65  
     642F 66  
     6430 67  
     6431 68  
     6432 69  
     6433 66  
     6434 6A  
     6435 6B  
     6436 6C  
     6437 6D  
     6438 6E  
     6439 6F  
     643A 70  
     643B 71  
     643C 72  
     643D 73  
     643E 74  
0065 643F 75  GLINE3_24 BYTE >75,>76,>77,>78,>79,>75,>77,>7A,>7B,>7C,>7D,>7E,>75,>7F,>80,>81,>82
     6440 76  
     6441 77  
     6442 78  
     6443 79  
     6444 75  
     6445 77  
     6446 7A  
     6447 7B  
     6448 7C  
     6449 7D  
     644A 7E  
     644B 75  
     644C 7F  
     644D 80  
     644E 81  
     644F 82  
0066 6450 83  GLINE4_25 BYTE >83,>84,>77,>85,>86,>87,>77,>7A,>7B,>7C,>7D,>7E,>75,>88,>89,>8A,>8B,>8C
     6451 84  
     6452 77  
     6453 85  
     6454 86  
     6455 87  
     6456 77  
     6457 7A  
     6458 7B  
     6459 7C  
     645A 7D  
     645B 7E  
     645C 75  
     645D 88  
     645E 89  
     645F 8A  
     6460 8B  
     6461 8C  
0067 6462 8D  GLINE5_9 BYTE >8D,>8E
     6463 8E  
0068 6464 8F  GLINE5_28 BYTE >8F,>90,>91,>92,>93,>94,>95,>96
     6465 90  
     6466 91  
     6467 92  
     6468 93  
     6469 94  
     646A 95  
     646B 96  
0069 646C 97  GLINE6_28 BYTE >97,>98,>99,>9A,>9B,>9C
     646D 98  
     646E 99  
     646F 9A  
     6470 9B  
     6471 9C  
0070          
0071          G_SCR1
0072 6472 31      MOVE >01E8,G@GUDG96,V@>0B00 ; Copy our screen chars
     6473 01  
     6474 E8
     6475 AB  
     6476 00
     6477 62  
     6478 42
0073          
0074 6479 31  	MOVE >0003,G@GLINE1_25,V@>0036
     647A 00  
     647B 03
     647C A0  
     647D 36
     647E 64  
     647F 2A
0075 6480 31  	MOVE >0012,G@GLINE2_25,V@>0047
     6481 00  
     6482 12
     6483 A0  
     6484 47
     6485 64  
     6486 2D
0076 6487 31  	MOVE >0011,G@GLINE3_24,V@>0067
     6488 00  
     6489 11
     648A A0  
     648B 67
     648C 64  
     648D 3F
0077 648E 31  	MOVE >0012,G@GLINE4_25,V@>0087
     648F 00  
     6490 12
     6491 A0  
     6492 87
     6493 64  
     6494 50
0078 6495 31  	MOVE >0002,G@GLINE5_9,V@>00A7
     6496 00  
     6497 02
     6498 A0  
     6499 A7
     649A 64  
     649B 62
0079 649C 31  	MOVE >0008,G@GLINE5_28,V@>00B4
     649D 00  
     649E 08
     649F A0  
     64A0 B4
     64A1 64  
     64A2 64
0080 64A3 31  	MOVE >0006,G@GLINE6_28,V@>00D6
     64A4 00  
     64A5 06
     64A6 A0  
     64A7 D6
     64A8 64  
     64A9 6C
0081          
0082 64AA 00      RTN
0083          
